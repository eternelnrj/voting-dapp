{
  "abi": [
    {
      "inputs": [],
      "name": "LENGTH_REGISTRATION_IN_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENGTH_VOTING_IN_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUMBER_CANDIDATES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountToVotesReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endRegistration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endVoting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberCandidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResults",
      "outputs": [
        {
          "internalType": "address[5]",
          "name": "",
          "type": "address[5]"
        },
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signupAsCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startRegistration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "candidate",
          "type": "address"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Vote.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vote.sol",
    "exportedSymbols": {
      "Vote": [
        309
      ]
    },
    "id": 310,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 309,
        "linearizedBaseContracts": [
          309
        ],
        "name": "Vote",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "58cb805b",
            "id": 4,
            "mutability": "constant",
            "name": "MAX_NUMBER_CANDIDATES",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "78:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "78:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "126:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3bdac454",
            "id": 7,
            "mutability": "constant",
            "name": "LENGTH_REGISTRATION_IN_BLOCKS",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "133:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "133:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "189:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1c599396",
            "id": 10,
            "mutability": "constant",
            "name": "LENGTH_VOTING_IN_BLOCKS",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "197:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "247:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10b86695",
            "id": 13,
            "mutability": "mutable",
            "name": "startRegistration",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "256:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "256:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "291:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a8a62ab",
            "id": 16,
            "mutability": "mutable",
            "name": "endRegistration",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "298:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "298:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "331:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3403ddf",
            "id": 19,
            "mutability": "mutable",
            "name": "endVoting",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "338:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "338:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "365:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "373:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 21,
              "nodeType": "ArrayTypeName",
              "src": "373:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "candidates",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "395:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "395:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 24,
              "nodeType": "ArrayTypeName",
              "src": "395:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "accountToHasVoted",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "422:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "430:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "422:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 27,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "441:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "accountToRegistration",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "470:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "478:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "470:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 31,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "489:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "39df9932",
            "id": 37,
            "mutability": "mutable",
            "name": "accountToVotesReceived",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "522:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "530:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "522:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "541:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "621:322:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "639:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "639:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 43,
                          "name": "endVoting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "654:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "639:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e63652c207468652063757272656e7420766f74696e67206973206e6f74206f7665722e",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "665:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ec66a14372a6bc4835f9e5159e05267eba7128cea5590aa74414dcc215d1f65",
                          "typeString": "literal_string \"Patience, the current voting is not over.\""
                        },
                        "value": "Patience, the current voting is not over."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ec66a14372a6bc4835f9e5159e05267eba7128cea5590aa74414dcc215d1f65",
                          "typeString": "literal_string \"Patience, the current voting is not over.\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "631:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "631:78:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48,
                      "name": "startRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "720:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 49,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "740:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "740:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "720:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "720:32:0"
                },
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "endRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "762:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 54,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "780:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "780:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 56,
                        "name": "LENGTH_REGISTRATION_IN_BLOCKS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "795:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "780:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "762:62:0"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "endVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "834:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 61,
                        "name": "endRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "846:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 62,
                        "name": "LENGTH_VOTING_IN_BLOCKS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "864:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "846:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "834:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "834:53:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66,
                      "name": "resetMappings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "898:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "898:15:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69,
                      "name": "resetArrays",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "923:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "923:13:0"
                }
              ]
            },
            "functionSelector": "0ff9e259",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiateElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:0:0"
            },
            "scope": 309,
            "src": "586:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "985:453:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1003:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1003:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 79,
                          "name": "endRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1019:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1003:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206e6f206c6f6e67657220726567697374657220617320612063616e64696461746520666f72207468697320656c656374696f6e2e",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1036:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_538beb36b81d496fc95d4119d3b11ade57fc4f324760ab010a29c5ad1289eb1f",
                          "typeString": "literal_string \"You can no longer register as a candidate for this election.\""
                        },
                        "value": "You can no longer register as a candidate for this election."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_538beb36b81d496fc95d4119d3b11ade57fc4f324760ab010a29c5ad1289eb1f",
                          "typeString": "literal_string \"You can no longer register as a candidate for this election.\""
                        }
                      ],
                      "id": 76,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "995:104:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 85,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "1117:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1117:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 87,
                          "name": "MAX_NUMBER_CANDIDATES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1137:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1117:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d206e756d626572206f662063616e64696461746573207265616368656420666f72207468697320656c656374696f6e2e",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1160:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf23588ec273a27a72fa551e7d789f2abecaf3ca8257ec7360eb1aa4350c40d1",
                          "typeString": "literal_string \"Maximum number of candidates reached for this election.\""
                        },
                        "value": "Maximum number of candidates reached for this election."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf23588ec273a27a72fa551e7d789f2abecaf3ca8257ec7360eb1aa4350c40d1",
                          "typeString": "literal_string \"Maximum number of candidates reached for this election.\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1109:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1236:34:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 93,
                            "name": "accountToRegistration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "1237:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 96,
                          "indexExpression": {
                            "expression": {
                              "id": 94,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1259:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1259:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1237:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320612063616e64696461746520666f72207468697320656c656374696f6e2e",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1272:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d0857d8afc7dd1aeaf7fe48ec7782408c5c955ae522a0a9f02db410fc05be53",
                          "typeString": "literal_string \"You are already registered as a candidate for this election.\""
                        },
                        "value": "You are already registered as a candidate for this election."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d0857d8afc7dd1aeaf7fe48ec7782408c5c955ae522a0a9f02db410fc05be53",
                          "typeString": "literal_string \"You are already registered as a candidate for this election.\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:107:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101,
                        "name": "accountToRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1354:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 104,
                      "indexExpression": {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1376:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1376:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1354:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1390:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1354:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1420:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1420:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1404:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1404:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:27:0"
                }
              ]
            },
            "functionSelector": "82e5dae5",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signupAsCandidate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:2:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:0"
            },
            "scope": 309,
            "src": "949:489:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1484:479:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 122,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1502:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1502:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 124,
                          "name": "endRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1517:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1502:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e63652c2074686520726567697374726174696f6e20706572696f64206973206e6f74206f76657221",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1534:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59ed22fcb7d203a09b10aa6e56740e76a8ea683bc5d57c92b1d8efdfbede469d",
                          "typeString": "literal_string \"Patience, the registration period is not over!\""
                        },
                        "value": "Patience, the registration period is not over!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59ed22fcb7d203a09b10aa6e56740e76a8ea683bc5d57c92b1d8efdfbede469d",
                          "typeString": "literal_string \"Patience, the registration period is not over!\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1494:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1494:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1494:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 130,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1602:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1602:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 132,
                          "name": "endVoting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1618:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1602:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520766f7465206973206f7665722e",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1629:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_878b62218020a387be6b873557dd705a424a09b77a8f413e27db15bc1831fdc1",
                          "typeString": "literal_string \"The vote is over.\""
                        },
                        "value": "The vote is over."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_878b62218020a387be6b873557dd705a424a09b77a8f413e27db15bc1831fdc1",
                          "typeString": "literal_string \"The vote is over.\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 138,
                          "name": "accountToRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1668:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 139,
                          "name": "candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1690:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1668:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732061646472657373206973206e6f74207265676973746572656420617320612063616e6469646174652e",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1702:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d266d63f07bc1dce785e719184d0e8f13fd0b02677623cdb22098692d7c6c680",
                          "typeString": "literal_string \"This address is not registered as a candidate.\""
                        },
                        "value": "This address is not registered as a candidate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d266d63f07bc1dce785e719184d0e8f13fd0b02677623cdb22098692d7c6c680",
                          "typeString": "literal_string \"This address is not registered as a candidate.\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1660:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1770:30:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 145,
                            "name": "accountToHasVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1771:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 148,
                          "indexExpression": {
                            "expression": {
                              "id": 146,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1789:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1789:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1771:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c726561647920766f7465642e",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1802:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1814df8007c14967d1dedfd016a222fa9f9d3d95d881e38c6e569314cca84863",
                          "typeString": "literal_string \"You have already voted.\""
                        },
                        "value": "You have already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1814df8007c14967d1dedfd016a222fa9f9d3d95d881e38c6e569314cca84863",
                          "typeString": "literal_string \"You have already voted.\""
                        }
                      ],
                      "id": 144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1762:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1762:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:66:0"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 153,
                        "name": "accountToHasVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1839:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1857:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1857:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1839:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1871:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1839:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1839:36:0"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 160,
                        "name": "accountToVotesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1885:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 162,
                      "indexExpression": {
                        "id": 161,
                        "name": "candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1908:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1885:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1922:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1885:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 169,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1945:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1945:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 166,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1933:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1933:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:23:0"
                }
              ]
            },
            "functionSelector": "6dd7d8ea",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "candidate",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1458:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:19:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1484:0:0"
            },
            "scope": 309,
            "src": "1444:519:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "2050:299:0",
              "statements": [
                {
                  "assignments": [
                    190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "candidates_",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "2060:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                        "typeString": "address[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 189,
                        "length": {
                          "hexValue": "35",
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2068:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2060:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                          "typeString": "address[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2060:30:0"
                },
                {
                  "assignments": [
                    197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 197,
                      "mutability": "mutable",
                      "name": "votes_",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "2100:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                        "typeString": "uint256[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 195,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 196,
                        "length": {
                          "hexValue": "35",
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2108:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2100:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                          "typeString": "uint256[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2100:25:0"
                },
                {
                  "body": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "2182:122:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 210,
                              "name": "candidates_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "2196:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                                "typeString": "address[5] memory"
                              }
                            },
                            "id": 212,
                            "indexExpression": {
                              "id": 211,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "2208:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2196:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 213,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2213:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 215,
                            "indexExpression": {
                              "id": 214,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "2224:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2213:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2196:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 217,
                        "nodeType": "ExpressionStatement",
                        "src": "2196:30:0"
                      },
                      {
                        "expression": {
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 218,
                              "name": "votes_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "2240:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                                "typeString": "uint256[5] memory"
                              }
                            },
                            "id": 220,
                            "indexExpression": {
                              "id": 219,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "2247:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2240:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 221,
                              "name": "accountToVotesReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2252:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 222,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "2275:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 224,
                              "indexExpression": {
                                "id": 223,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "2286:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2275:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2252:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2240:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2240:49:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 203,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "2154:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 204,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2158:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2158:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2154:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 229,
                  "initializationExpression": {
                    "assignments": [
                      200
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2141:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2141:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 202,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2151:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2141:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2177:3:0",
                      "subExpression": {
                        "id": 207,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2177:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 209,
                    "nodeType": "ExpressionStatement",
                    "src": "2177:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2136:168:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 230,
                        "name": "candidates_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2322:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                          "typeString": "address[5] memory"
                        }
                      },
                      {
                        "id": 231,
                        "name": "votes_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2335:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                          "typeString": "uint256[5] memory"
                        }
                      }
                    ],
                    "id": 232,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2321:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$5_memory_ptr_$",
                      "typeString": "tuple(address[5] memory,uint256[5] memory)"
                    }
                  },
                  "functionReturnParameters": 184,
                  "id": 233,
                  "nodeType": "Return",
                  "src": "2314:28:0"
                }
              ]
            },
            "functionSelector": "4717f97c",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:2:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2012:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                    "typeString": "address[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 176,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2012:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 178,
                    "length": {
                      "hexValue": "35",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2020:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2012:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2031:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2031:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 182,
                    "length": {
                      "hexValue": "35",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2039:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2031:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2011:38:0"
            },
            "scope": 309,
            "src": "1969:380:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "2416:41:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 240,
                      "name": "candidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2433:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2433:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 242,
                  "nodeType": "Return",
                  "src": "2426:24:0"
                }
              ]
            },
            "functionSelector": "493f584c",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberCandidates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2383:2:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2407:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2406:9:0"
            },
            "scope": 309,
            "src": "2355:102:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "2497:311:0",
              "statements": [
                {
                  "body": {
                    "id": 274,
                    "nodeType": "Block",
                    "src": "2553:124:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 258,
                              "name": "accountToRegistration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "2567:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 262,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 259,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "2589:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 261,
                              "indexExpression": {
                                "id": 260,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "2600:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2589:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2567:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2606:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2567:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 265,
                        "nodeType": "ExpressionStatement",
                        "src": "2567:44:0"
                      },
                      {
                        "expression": {
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 266,
                              "name": "accountToVotesReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2625:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 270,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 267,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "2648:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 269,
                              "indexExpression": {
                                "id": 268,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "2659:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2648:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2625:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2665:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2625:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 273,
                        "nodeType": "ExpressionStatement",
                        "src": "2625:41:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 251,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "2525:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 252,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2529:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2529:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2525:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "initializationExpression": {
                    "assignments": [
                      248
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "2512:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 250,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2522:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2512:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2548:3:0",
                      "subExpression": {
                        "id": 255,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2548:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 257,
                    "nodeType": "ExpressionStatement",
                    "src": "2548:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2507:170:0"
                },
                {
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2741:61:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 287,
                              "name": "accountToHasVoted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "2755:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 288,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2773:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 290,
                              "indexExpression": {
                                "id": 289,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "2780:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2773:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2755:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2786:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2755:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "2755:36:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 280,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2717:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 281,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2721:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2721:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2717:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 296,
                  "initializationExpression": {
                    "assignments": [
                      277
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2704:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 279,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2714:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2704:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2736:3:0",
                      "subExpression": {
                        "id": 284,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2736:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 286,
                    "nodeType": "ExpressionStatement",
                    "src": "2736:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2699:103:0"
                }
              ]
            },
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetMappings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2485:2:0"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2497:0:0"
            },
            "scope": 309,
            "src": "2463:345:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "2846:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2856:13:0",
                    "subExpression": {
                      "id": 301,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2863:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:13:0"
                },
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2879:17:0",
                    "subExpression": {
                      "id": 304,
                      "name": "candidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2886:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:17:0"
                }
              ]
            },
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetArrays",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2834:2:0"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2846:0:0"
            },
            "scope": 309,
            "src": "2814:89:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 310,
        "src": "58:2848:0"
      }
    ],
    "src": "32:2874:0"
  },
  "bytecode": "6080604052600080556000600155600060025534801561001e57600080fd5b50610a4d8061002e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063493f584c11610071578063493f584c1461011a5780634a8a62ab1461012257806358cb805b1461012a5780636dd7d8ea1461013257806382e5dae514610145578063c3403ddf1461014d576100b4565b80630ff9e259146100b957806310b86695146100c35780631c599396146100e157806339df9932146100e95780633bdac454146100fc5780634717f97c14610104575b600080fd5b6100c1610155565b005b6100cb6101b7565b6040516100d891906109c5565b60405180910390f35b6100cb6101bd565b6100cb6100f73660046106d3565b6101c2565b6100cb6101d4565b61010c6101d9565b6040516100d8929190610701565b6100cb610304565b6100cb61030a565b6100cb610310565b6100c16101403660046106d3565b610315565b6100c161044e565b6100cb610520565b600254431161017f5760405162461bcd60e51b815260040161017690610849565b60405180910390fd5b436000819055610191906014906109ce565b60018190556101a2906032906109ce565b6002556101ad610526565b6101b561066b565b565b60005481565b603281565b60076020526000908152604090205481565b601481565b6101e1610683565b6101e9610683565b6101f1610683565b6101f9610683565b60005b6004548110156102fa576004818154811061022757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031683826005811061025c57634e487b7160e01b600052603260045260246000fd5b60200201906001600160a01b031690816001600160a01b031681525050600760006004838154811061029e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548282600581106102e357634e487b7160e01b600052603260045260246000fd5b6020020152806102f2816109e6565b9150506101fc565b5090925090509091565b60045490565b60015481565b600581565b60015443116103365760405162461bcd60e51b8152600401610176906107fb565b6002544311156103585760405162461bcd60e51b815260040161017690610892565b6001600160a01b03811660009081526006602052604090205460ff166103905760405162461bcd60e51b815260040161017690610977565b3360009081526005602052604090205460ff16156103c05760405162461bcd60e51b815260040161017690610767565b336000908152600560209081526040808320805460ff191660019081179091556001600160a01b0385168452600790925282208054919290916104049084906109ce565b9091555050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319163317905550565b6001544311156104705760405162461bcd60e51b81526004016101769061079e565b6004546005116104925760405162461bcd60e51b81526004016101769061091a565b3360009081526006602052604090205460ff16156104c25760405162461bcd60e51b8152600401610176906108bd565b336000818152600660205260408120805460ff191660019081179091556004805491820181559091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319169091179055565b60025481565b60005b6004548110156105ed576000600660006004848154811061055a57634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040018120805460ff191692151592909217909155600480546007918391859081106105b657634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902055806105e5816109e6565b915050610529565b5060005b600354811015610668576000600560006003848154811061062257634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580610660816109e6565b9150506105f1565b50565b610677600360006106a1565b6101b5600460006106a1565b6040518060a001604052806005906020820280368337509192915050565b508054600082559060005260206000209081019061066891905b808211156106cf57600081556001016106bb565b5090565b6000602082840312156106e4578081fd5b81356001600160a01b03811681146106fa578182fd5b9392505050565b6101408101818460005b60058110156107335781516001600160a01b031683526020928301929091019060010161070b565b50505060a082018360005b600581101561075d57815183526020928301929091019060010161073e565b5050509392505050565b60208082526017908201527f596f75206861766520616c726561647920766f7465642e000000000000000000604082015260600190565b6020808252603c908201527f596f752063616e206e6f206c6f6e67657220726567697374657220617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b6020808252602e908201527f50617469656e63652c2074686520726567697374726174696f6e20706572696f60408201526d64206973206e6f74206f7665722160901b606082015260800190565b60208082526029908201527f50617469656e63652c207468652063757272656e7420766f74696e67206973206040820152683737ba1037bb32b91760b91b606082015260800190565b6020808252601190820152702a3432903b37ba329034b99037bb32b91760791b604082015260600190565b6020808252603c908201527f596f752061726520616c7265616479207265676973746572656420617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b60208082526037908201527f4d6178696d756d206e756d626572206f662063616e646964617465732072656160408201527f6368656420666f72207468697320656c656374696f6e2e000000000000000000606082015260800190565b6020808252602e908201527f546869732061646472657373206973206e6f742072656769737465726564206160408201526d3990309031b0b73234b230ba329760911b606082015260800190565b90815260200190565b600082198211156109e1576109e1610a01565b500190565b60006000198214156109fa576109fa610a01565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220051c1c2d3fdb1982f70c8201703568b891c61f85366a3bcde79e70026f9a23bd64736f6c63430008000033",
  "bytecodeSha1": "e51bc3df9cf1b9129d39a4eab5b179d6153282ad",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "Vote",
  "coverageMap": {
    "branches": {
      "0": {
        "Vote.initiateElection": {
          "30": [
            639,
            663,
            true
          ]
        },
        "Vote.signupAsCandidate": {
          "35": [
            1003,
            1034,
            true
          ],
          "36": [
            1236,
            1270,
            true
          ]
        },
        "Vote.vote": {
          "31": [
            1502,
            1532,
            true
          ],
          "32": [
            1602,
            1627,
            true
          ],
          "33": [
            1668,
            1700,
            true
          ],
          "34": [
            1770,
            1800,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Vote.getNumberCandidates": {
          "10": [
            2426,
            2450
          ]
        },
        "Vote.getResults": {
          "6": [
            2196,
            2226
          ],
          "7": [
            2240,
            2289
          ],
          "8": [
            2177,
            2180
          ],
          "9": [
            2314,
            2342
          ]
        },
        "Vote.initiateElection": {
          "0": [
            631,
            709
          ],
          "1": [
            720,
            752
          ],
          "2": [
            762,
            824
          ],
          "3": [
            834,
            887
          ],
          "4": [
            898,
            913
          ],
          "5": [
            923,
            936
          ]
        },
        "Vote.resetArrays": {
          "28": [
            2856,
            2869
          ],
          "29": [
            2879,
            2896
          ]
        },
        "Vote.resetMappings": {
          "23": [
            2567,
            2611
          ],
          "24": [
            2625,
            2666
          ],
          "25": [
            2548,
            2551
          ],
          "26": [
            2755,
            2791
          ],
          "27": [
            2736,
            2739
          ]
        },
        "Vote.signupAsCandidate": {
          "18": [
            995,
            1099
          ],
          "19": [
            1109,
            1218
          ],
          "20": [
            1228,
            1335
          ],
          "21": [
            1354,
            1394
          ],
          "22": [
            1404,
            1431
          ]
        },
        "Vote.vote": {
          "11": [
            1494,
            1583
          ],
          "12": [
            1594,
            1649
          ],
          "13": [
            1660,
            1751
          ],
          "14": [
            1762,
            1828
          ],
          "15": [
            1839,
            1875
          ],
          "16": [
            1885,
            1923
          ],
          "17": [
            1933,
            1956
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063493f584c11610071578063493f584c1461011a5780634a8a62ab1461012257806358cb805b1461012a5780636dd7d8ea1461013257806382e5dae514610145578063c3403ddf1461014d576100b4565b80630ff9e259146100b957806310b86695146100c35780631c599396146100e157806339df9932146100e95780633bdac454146100fc5780634717f97c14610104575b600080fd5b6100c1610155565b005b6100cb6101b7565b6040516100d891906109c5565b60405180910390f35b6100cb6101bd565b6100cb6100f73660046106d3565b6101c2565b6100cb6101d4565b61010c6101d9565b6040516100d8929190610701565b6100cb610304565b6100cb61030a565b6100cb610310565b6100c16101403660046106d3565b610315565b6100c161044e565b6100cb610520565b600254431161017f5760405162461bcd60e51b815260040161017690610849565b60405180910390fd5b436000819055610191906014906109ce565b60018190556101a2906032906109ce565b6002556101ad610526565b6101b561066b565b565b60005481565b603281565b60076020526000908152604090205481565b601481565b6101e1610683565b6101e9610683565b6101f1610683565b6101f9610683565b60005b6004548110156102fa576004818154811061022757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031683826005811061025c57634e487b7160e01b600052603260045260246000fd5b60200201906001600160a01b031690816001600160a01b031681525050600760006004838154811061029e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548282600581106102e357634e487b7160e01b600052603260045260246000fd5b6020020152806102f2816109e6565b9150506101fc565b5090925090509091565b60045490565b60015481565b600581565b60015443116103365760405162461bcd60e51b8152600401610176906107fb565b6002544311156103585760405162461bcd60e51b815260040161017690610892565b6001600160a01b03811660009081526006602052604090205460ff166103905760405162461bcd60e51b815260040161017690610977565b3360009081526005602052604090205460ff16156103c05760405162461bcd60e51b815260040161017690610767565b336000908152600560209081526040808320805460ff191660019081179091556001600160a01b0385168452600790925282208054919290916104049084906109ce565b9091555050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319163317905550565b6001544311156104705760405162461bcd60e51b81526004016101769061079e565b6004546005116104925760405162461bcd60e51b81526004016101769061091a565b3360009081526006602052604090205460ff16156104c25760405162461bcd60e51b8152600401610176906108bd565b336000818152600660205260408120805460ff191660019081179091556004805491820181559091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319169091179055565b60025481565b60005b6004548110156105ed576000600660006004848154811061055a57634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040018120805460ff191692151592909217909155600480546007918391859081106105b657634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902055806105e5816109e6565b915050610529565b5060005b600354811015610668576000600560006003848154811061062257634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580610660816109e6565b9150506105f1565b50565b610677600360006106a1565b6101b5600460006106a1565b6040518060a001604052806005906020820280368337509192915050565b508054600082559060005260206000209081019061066891905b808211156106cf57600081556001016106bb565b5090565b6000602082840312156106e4578081fd5b81356001600160a01b03811681146106fa578182fd5b9392505050565b6101408101818460005b60058110156107335781516001600160a01b031683526020928301929091019060010161070b565b50505060a082018360005b600581101561075d57815183526020928301929091019060010161073e565b5050509392505050565b60208082526017908201527f596f75206861766520616c726561647920766f7465642e000000000000000000604082015260600190565b6020808252603c908201527f596f752063616e206e6f206c6f6e67657220726567697374657220617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b6020808252602e908201527f50617469656e63652c2074686520726567697374726174696f6e20706572696f60408201526d64206973206e6f74206f7665722160901b606082015260800190565b60208082526029908201527f50617469656e63652c207468652063757272656e7420766f74696e67206973206040820152683737ba1037bb32b91760b91b606082015260800190565b6020808252601190820152702a3432903b37ba329034b99037bb32b91760791b604082015260600190565b6020808252603c908201527f596f752061726520616c7265616479207265676973746572656420617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b60208082526037908201527f4d6178696d756d206e756d626572206f662063616e646964617465732072656160408201527f6368656420666f72207468697320656c656374696f6e2e000000000000000000606082015260800190565b6020808252602e908201527f546869732061646472657373206973206e6f742072656769737465726564206160408201526d3990309031b0b73234b230ba329760911b606082015260800190565b90815260200190565b600082198211156109e1576109e1610a01565b500190565b60006000198214156109fa576109fa610a01565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220051c1c2d3fdb1982f70c8201703568b891c61f85366a3bcde79e70026f9a23bd64736f6c63430008000033",
  "deployedSourceMap": "58:2848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:357;;;:::i;:::-;;256:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;197:52;;;:::i;522:57::-;;;;;;:::i;:::-;;:::i;133:58::-;;;:::i;1969:380::-;;;:::i;:::-;;;;;;;;:::i;2355:102::-;;;:::i;298:34::-;;;:::i;78:49::-;;;:::i;1444:519::-;;;;;;:::i;:::-;;:::i;949:489::-;;;:::i;338:28::-;;;:::i;586:357::-;654:9;;639:12;:24;631:78;;;;-1:-1:-1;;;631:78:0;;;;;;;:::i;:::-;;;;;;;;;740:12;720:17;:32;;;780:44;;189:2;;780:44;:::i;:::-;762:15;:62;;;846:41;;247:2;;846:41;:::i;:::-;834:9;:53;898:15;:13;:15::i;:::-;923:13;:11;:13::i;:::-;586:357::o;256:36::-;;;;:::o;197:52::-;247:2;197:52;:::o;522:57::-;;;;;;;;;;;;;:::o;133:58::-;189:2;133:58;:::o;1969:380::-;2012:17;;:::i;:::-;2031;;:::i;:::-;2060:30;;:::i;:::-;2100:25;;:::i;:::-;2141:9;2136:168;2158:10;:17;2154:21;;2136:168;;;2213:10;2224:1;2213:13;;;;;;-1:-1:-1;;;2213:13:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2213:13:0;2196:11;2208:1;2196:14;;;;;-1:-1:-1;;;2196:14:0;;;;;;;;;;;;:30;-1:-1:-1;;;;;2196:30:0;;;-1:-1:-1;;;;;2196:30:0;;;;;2252:22;:37;2275:10;2286:1;2275:13;;;;;;-1:-1:-1;;;2275:13:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2275:13:0;2252:37;;;;;;;;;;;;;2240:6;2247:1;2240:9;;;;;-1:-1:-1;;;2240:9:0;;;;;;;;;;;;:49;2177:3;;;;:::i;:::-;;;;2136:168;;;-1:-1:-1;2322:11:0;;-1:-1:-1;2335:6:0;-1:-1:-1;1969:380:0;;:::o;2355:102::-;2433:10;:17;2355:102;:::o;298:34::-;;;;:::o;78:49::-;126:1;78:49;:::o;1444:519::-;1517:15;;1502:12;:30;1494:89;;;;-1:-1:-1;;;1494:89:0;;;;;;;:::i;:::-;1618:9;;1602:12;:25;;1594:55;;;;-1:-1:-1;;;1594:55:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1668:32:0;;;;;;:21;:32;;;;;;;;1660:91;;;;-1:-1:-1;;;1660:91:0;;;;;;;:::i;:::-;1789:10;1771:29;;;;:17;:29;;;;;;;;1770:30;1762:66;;;;-1:-1:-1;;;1762:66:0;;;;;;;:::i;:::-;1857:10;1839:29;;;;:17;:29;;;;;;;;:36;;-1:-1:-1;;1839:36:0;1871:4;1839:36;;;;;;-1:-1:-1;;;;;1885:33:0;;;;:22;:33;;;;;:38;;1871:4;;1885:33;;:38;;1871:4;;1885:38;:::i;:::-;;;;-1:-1:-1;;1933:6:0;:23;;;;;;;-1:-1:-1;1933:23:0;;;;;;;;-1:-1:-1;;;;;;1933:23:0;1945:10;1933:23;;;-1:-1:-1;1444:519:0:o;949:489::-;1019:15;;1003:12;:31;;995:104;;;;-1:-1:-1;;;995:104:0;;;;;;;:::i;:::-;1117:10;:17;126:1;-1:-1:-1;1109:109:0;;;;-1:-1:-1;;;1109:109:0;;;;;;;:::i;:::-;1259:10;1237:33;;;;:21;:33;;;;;;;;1236:34;1228:107;;;;-1:-1:-1;;;1228:107:0;;;;;;;:::i;:::-;1376:10;1354:33;;;;:21;:33;;;;;:40;;-1:-1:-1;;1354:40:0;1390:4;1354:40;;;;;;1404:10;:27;;;;;;;;;;;;;;-1:-1:-1;;;;;;1404:27:0;;;;;;949:489::o;338:28::-;;;;:::o;2463:345::-;2512:9;2507:170;2529:10;:17;2525:21;;2507:170;;;2606:5;2567:21;:36;2589:10;2600:1;2589:13;;;;;;-1:-1:-1;;;2589:13:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2589:13:0;2567:36;;;;;;;;;;;;:44;;-1:-1:-1;;2567:44:0;;;;;;;;;;;2648:10;:13;;2625:22;;2589:13;;2659:1;;2648:13;;;;-1:-1:-1;;;2648:13:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2648:13:0;2625:37;;;;;;;;;;;;:41;2548:3;;;;:::i;:::-;;;;2507:170;;;;2704:9;2699:103;2721:6;:13;2717:17;;2699:103;;;2786:5;2755:17;:28;2773:6;2780:1;2773:9;;;;;;-1:-1:-1;;;2773:9:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2773:9:0;2755:28;;;;;;;;;;;;:36;;-1:-1:-1;;2755:36:0;;;;;;;;;;2736:3;;;;:::i;:::-;;;;2699:103;;;;2463:345::o;2814:89::-;2856:13;2863:6;;2856:13;:::i;:::-;2879:17;2886:10;;2879:17;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:306:1:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o;325:932::-;579:3;564:19;;568:9;660:6;325:932;694:220;708:4;705:1;702:11;694:220;;;771:13;;-1:-1:-1;;;;;767:39:1;755:52;;830:4;854:12;;;;889:15;;;;803:1;721:9;694:220;;;698:3;;;951;940:9;936:19;1003:6;1029:1;1039:212;1055:4;1050:3;1047:13;1039:212;;;1120:15;;1106:30;;1159:4;1185:14;;;;1224:17;;;;1079:1;1070:11;1039:212;;;1043:3;;;546:711;;;;;:::o;1262:347::-;1464:2;1446:21;;;1503:2;1483:18;;;1476:30;1542:25;1537:2;1522:18;;1515:53;1600:2;1585:18;;1436:173::o;1614:424::-;1816:2;1798:21;;;1855:2;1835:18;;;1828:30;1894:34;1889:2;1874:18;;1867:62;1965:30;1960:2;1945:18;;1938:58;2028:3;2013:19;;1788:250::o;2043:410::-;2245:2;2227:21;;;2284:2;2264:18;;;2257:30;2323:34;2318:2;2303:18;;2296:62;-1:-1:-1;;;2389:2:1;2374:18;;2367:44;2443:3;2428:19;;2217:236::o;2458:405::-;2660:2;2642:21;;;2699:2;2679:18;;;2672:30;2738:34;2733:2;2718:18;;2711:62;-1:-1:-1;;;2804:2:1;2789:18;;2782:39;2853:3;2838:19;;2632:231::o;2868:341::-;3070:2;3052:21;;;3109:2;3089:18;;;3082:30;-1:-1:-1;;;3143:2:1;3128:18;;3121:47;3200:2;3185:18;;3042:167::o;3214:424::-;3416:2;3398:21;;;3455:2;3435:18;;;3428:30;3494:34;3489:2;3474:18;;3467:62;3565:30;3560:2;3545:18;;3538:58;3628:3;3613:19;;3388:250::o;3643:419::-;3845:2;3827:21;;;3884:2;3864:18;;;3857:30;3923:34;3918:2;3903:18;;3896:62;3994:25;3989:2;3974:18;;3967:53;4052:3;4037:19;;3817:245::o;4067:410::-;4269:2;4251:21;;;4308:2;4288:18;;;4281:30;4347:34;4342:2;4327:18;;4320:62;-1:-1:-1;;;4413:2:1;4398:18;;4391:44;4467:3;4452:19;;4241:236::o;4482:177::-;4628:25;;;4616:2;4601:18;;4583:76::o;4664:128::-;;4735:1;4731:6;4728:1;4725:13;4722:2;;;4741:18;;:::i;:::-;-1:-1:-1;4777:9:1;;4712:80::o;4797:135::-;;-1:-1:-1;;4857:17:1;;4854:2;;;4877:18;;:::i;:::-;-1:-1:-1;4924:1:1;4913:13;;4844:88::o;4937:127::-;4998:10;4993:3;4989:20;4986:1;4979:31;5029:4;5026:1;5019:15;5053:4;5050:1;5043:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    2906
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x493F584C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x493F584C EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x4A8A62AB EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x58CB805B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x82E5DAE5 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xC3403DDF EQ PUSH2 0x14D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xFF9E259 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x10B86695 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x1C599396 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x39DF9932 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3BDAC454 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x4717F97C EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x1BD JUMP JUMPDEST PUSH2 0xCB PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x304 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x30A JUMP JUMPDEST PUSH2 0xCB PUSH2 0x310 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x44E JUMP JUMPDEST PUSH2 0xCB PUSH2 0x520 JUMP JUMPDEST PUSH1 0x2 SLOAD NUMBER GT PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH2 0x191 SWAP1 PUSH1 0x14 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x1A2 SWAP1 PUSH1 0x32 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x1AD PUSH2 0x526 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x66B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x7 PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x29E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0x2E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MSTORE DUP1 PUSH2 0x2F2 DUP2 PUSH2 0x9E6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FC JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x2 SLOAD NUMBER GT ISZERO PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x977 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x767 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x404 SWAP1 DUP5 SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 GT PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x91A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x8BD JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x55A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SWAP2 DUP4 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x5B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x5E5 DUP2 PUSH2 0x9E6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x529 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x622 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x660 DUP2 PUSH2 0x9E6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x677 PUSH1 0x3 PUSH1 0x0 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 PUSH1 0x0 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x6BB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x140 DUP2 ADD DUP2 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x733 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x70B JUMP JUMPDEST POP POP POP PUSH1 0xA0 DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x75D JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x73E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920766F7465642E000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F206C6F6E676572207265676973746572206173206120 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x50617469656E63652C2074686520726567697374726174696F6E20706572696F PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x64206973206E6F74206F76657221 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x50617469656E63652C207468652063757272656E7420766F74696E6720697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3737BA1037BB32B917 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x2A3432903B37BA329034B99037BB32B917 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C72656164792072656769737465726564206173206120 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206E756D626572206F662063616E6469646174657320726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6368656420666F72207468697320656C656374696F6E2E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732061646472657373206973206E6F7420726567697374657265642061 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x3990309031B0B73234B230BA3297 PUSH1 0x91 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0xA01 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9FA PUSH2 0xA01 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV SHR SHR 0x2D EXTCODEHASH 0xDB NOT DUP3 0xF7 0xC DUP3 ADD PUSH17 0x3568B891C61F85366A3BCDE79E70026F9A 0x23 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x493F584C"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x493F584C"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4A8A62AB"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x58CB805B"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6DD7D8EA"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x82E5DAE5"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "97": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC3403DDF"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "108": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "112": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFF9E259"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x10B86695"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1C599396"
    },
    "142": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "146": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39DF9932"
    },
    "153": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "157": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BDAC454"
    },
    "164": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "168": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4717F97C"
    },
    "175": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "179": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        2906
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "fn": "Vote.initiateElection",
      "offset": [
        586,
        943
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": "Vote.initiateElection",
      "offset": [
        586,
        943
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "fn": "Vote.initiateElection",
      "offset": [
        586,
        943
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "192": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        586,
        943
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": "Vote.initiateElection",
      "offset": [
        586,
        943
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "Vote.initiateElection",
      "offset": [
        586,
        943
      ],
      "op": "STOP",
      "path": "0"
    },
    "195": {
      "offset": [
        256,
        292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "199": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "202": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        256,
        292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "203": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "206": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "207": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8"
    },
    "210": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "211": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "212": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C5"
    },
    "215": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        256,
        292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "216": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "217": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "219": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "220": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "221": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "222": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "SUB",
      "path": "0"
    },
    "223": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "224": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "RETURN",
      "path": "0"
    },
    "225": {
      "offset": [
        197,
        249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "229": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "232": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        197,
        249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "233": {
      "offset": [
        522,
        579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "237": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "240": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "241": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "243": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D3"
    },
    "246": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        522,
        579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "247": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2"
    },
    "251": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        522,
        579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "252": {
      "offset": [
        133,
        191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "Vote.initiateElection",
      "offset": [
        133,
        191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "256": {
      "fn": "Vote.initiateElection",
      "offset": [
        133,
        191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "259": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        133,
        191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "264": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "267": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        1969,
        2349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "268": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "269": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "271": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "272": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8"
    },
    "275": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "276": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "277": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "278": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x701"
    },
    "281": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        1969,
        2349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2355,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2355,
        2457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "286": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2355,
        2457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "289": {
      "fn": "Vote.getNumberCandidates",
      "jump": "i",
      "offset": [
        2355,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "290": {
      "offset": [
        298,
        332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "291": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        298,
        332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "294": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        298,
        332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30A"
    },
    "297": {
      "fn": "Vote.getNumberCandidates",
      "jump": "i",
      "offset": [
        298,
        332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "offset": [
        78,
        127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        78,
        127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "302": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        78,
        127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "305": {
      "fn": "Vote.getNumberCandidates",
      "jump": "i",
      "offset": [
        78,
        127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "310": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "313": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "314": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "316": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D3"
    },
    "319": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1444,
        1963
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x315"
    },
    "324": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1444,
        1963
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        949,
        1438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        949,
        1438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "329": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        949,
        1438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44E"
    },
    "332": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        949,
        1438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "offset": [
        338,
        366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        338,
        366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "337": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        338,
        366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x520"
    },
    "340": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        338,
        366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "341": {
      "fn": "Vote.initiateElection",
      "offset": [
        586,
        943
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "Vote.initiateElection",
      "offset": [
        654,
        663
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "344": {
      "fn": "Vote.initiateElection",
      "offset": [
        654,
        663
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "345": {
      "fn": "Vote.initiateElection",
      "offset": [
        639,
        651
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "346": {
      "branch": 30,
      "fn": "Vote.initiateElection",
      "offset": [
        639,
        663
      ],
      "op": "GT",
      "path": "0"
    },
    "347": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "350": {
      "branch": 30,
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "351": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "353": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "360": {
      "op": "SHL"
    },
    "361": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "362": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "363": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "365": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "ADD",
      "path": "0"
    },
    "366": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "369": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x849"
    },
    "373": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        631,
        709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "374": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "375": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "377": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "378": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "379": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "380": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "SUB",
      "path": "0"
    },
    "381": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "382": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "383": {
      "fn": "Vote.initiateElection",
      "offset": [
        631,
        709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "384": {
      "fn": "Vote.initiateElection",
      "offset": [
        740,
        752
      ],
      "op": "NUMBER",
      "path": "0",
      "statement": 1
    },
    "385": {
      "fn": "Vote.initiateElection",
      "offset": [
        720,
        737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "387": {
      "fn": "Vote.initiateElection",
      "offset": [
        720,
        752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "388": {
      "fn": "Vote.initiateElection",
      "offset": [
        720,
        752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "389": {
      "fn": "Vote.initiateElection",
      "offset": [
        720,
        752
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "390": {
      "fn": "Vote.initiateElection",
      "offset": [
        780,
        824
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x191"
    },
    "393": {
      "fn": "Vote.initiateElection",
      "offset": [
        780,
        824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "394": {
      "offset": [
        189,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "396": {
      "fn": "Vote.initiateElection",
      "offset": [
        189,
        191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "Vote.initiateElection",
      "offset": [
        780,
        824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "400": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        780,
        824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "Vote.initiateElection",
      "offset": [
        780,
        824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "404": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "405": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "406": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        824
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "407": {
      "fn": "Vote.initiateElection",
      "offset": [
        846,
        887
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x1A2"
    },
    "410": {
      "fn": "Vote.initiateElection",
      "offset": [
        846,
        887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "411": {
      "offset": [
        247,
        249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "413": {
      "fn": "Vote.initiateElection",
      "offset": [
        247,
        249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "414": {
      "fn": "Vote.initiateElection",
      "offset": [
        846,
        887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "417": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        846,
        887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "fn": "Vote.initiateElection",
      "offset": [
        846,
        887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "Vote.initiateElection",
      "offset": [
        834,
        843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "421": {
      "fn": "Vote.initiateElection",
      "offset": [
        834,
        887
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "422": {
      "fn": "Vote.initiateElection",
      "offset": [
        898,
        913
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x1AD"
    },
    "425": {
      "fn": "Vote.initiateElection",
      "offset": [
        898,
        911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x526"
    },
    "428": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        898,
        913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "429": {
      "fn": "Vote.initiateElection",
      "offset": [
        898,
        913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "430": {
      "fn": "Vote.initiateElection",
      "offset": [
        923,
        936
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x1B5"
    },
    "433": {
      "fn": "Vote.initiateElection",
      "offset": [
        923,
        934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66B"
    },
    "436": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        923,
        936
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "Vote.initiateElection",
      "offset": [
        923,
        936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        586,
        943
      ],
      "op": "JUMP",
      "path": "0"
    },
    "439": {
      "offset": [
        256,
        292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "442": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "443": {
      "fn": "Vote.initiateElection",
      "offset": [
        256,
        292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "444": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        256,
        292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "445": {
      "offset": [
        197,
        249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "offset": [
        247,
        249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "448": {
      "offset": [
        197,
        249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "449": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        197,
        249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "450": {
      "offset": [
        522,
        579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "451": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "453": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "455": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "456": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "458": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "460": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "461": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "463": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "464": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "465": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "466": {
      "fn": "Vote.initiateElection",
      "offset": [
        522,
        579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "467": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        522,
        579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "offset": [
        133,
        191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "offset": [
        189,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "471": {
      "offset": [
        133,
        191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "472": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        133,
        191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "Vote.getResults",
      "offset": [
        2012,
        2029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "477": {
      "fn": "Vote.getResults",
      "offset": [
        2012,
        2029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "480": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2012,
        2029
      ],
      "op": "JUMP",
      "path": "0"
    },
    "481": {
      "fn": "Vote.getResults",
      "offset": [
        2012,
        2029
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "482": {
      "fn": "Vote.getResults",
      "offset": [
        2031,
        2048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "485": {
      "fn": "Vote.getResults",
      "offset": [
        2031,
        2048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "488": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2031,
        2048
      ],
      "op": "JUMP",
      "path": "0"
    },
    "489": {
      "fn": "Vote.getResults",
      "offset": [
        2031,
        2048
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "490": {
      "fn": "Vote.getResults",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "493": {
      "fn": "Vote.getResults",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "496": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2060,
        2090
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "fn": "Vote.getResults",
      "offset": [
        2060,
        2090
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9"
    },
    "501": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "504": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2100,
        2125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "505": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "Vote.getResults",
      "offset": [
        2141,
        2150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "508": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "Vote.getResults",
      "offset": [
        2158,
        2168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "511": {
      "fn": "Vote.getResults",
      "offset": [
        2158,
        2175
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "512": {
      "fn": "Vote.getResults",
      "offset": [
        2154,
        2175
      ],
      "op": "DUP2",
      "path": "0"
    },
    "513": {
      "fn": "Vote.getResults",
      "offset": [
        2154,
        2175
      ],
      "op": "LT",
      "path": "0"
    },
    "514": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "515": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "518": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "519": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x4"
    },
    "521": {
      "fn": "Vote.getResults",
      "offset": [
        2224,
        2225
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "523": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "524": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "525": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "LT",
      "path": "0"
    },
    "526": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "529": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "530": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "540": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "543": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "545": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "546": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "548": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "550": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "REVERT",
      "path": "0"
    },
    "551": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "554": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "555": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "556": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "557": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "559": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "560": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "561": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "562": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "ADD",
      "path": "0"
    },
    "563": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "570": {
      "op": "SHL"
    },
    "571": {
      "op": "SUB"
    },
    "572": {
      "fn": "Vote.getResults",
      "offset": [
        2213,
        2226
      ],
      "op": "AND",
      "path": "0"
    },
    "573": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2207
      ],
      "op": "DUP4",
      "path": "0"
    },
    "574": {
      "fn": "Vote.getResults",
      "offset": [
        2208,
        2209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "577": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "578": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "LT",
      "path": "0"
    },
    "579": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "582": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "583": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "590": {
      "op": "SHL"
    },
    "591": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "593": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "594": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "596": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "598": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "599": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "601": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "603": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "REVERT",
      "path": "0"
    },
    "604": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "605": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "607": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "MUL",
      "path": "0"
    },
    "608": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2210
      ],
      "op": "ADD",
      "path": "0"
    },
    "609": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "op": "SUB"
    },
    "618": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "AND",
      "path": "0"
    },
    "619": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "620": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "AND",
      "path": "0"
    },
    "630": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "631": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "632": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "633": {
      "fn": "Vote.getResults",
      "offset": [
        2196,
        2226
      ],
      "op": "POP",
      "path": "0"
    },
    "634": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2274
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x7"
    },
    "636": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "638": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "640": {
      "fn": "Vote.getResults",
      "offset": [
        2286,
        2287
      ],
      "op": "DUP4",
      "path": "0"
    },
    "641": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "642": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "643": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "644": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "LT",
      "path": "0"
    },
    "645": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "648": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "649": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "659": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "660": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "662": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "664": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "665": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "667": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "669": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "REVERT",
      "path": "0"
    },
    "670": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "671": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "673": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "674": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "DUP3",
      "path": "0"
    },
    "675": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "676": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "678": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "DUP1",
      "path": "0"
    },
    "679": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "DUP4",
      "path": "0"
    },
    "680": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "681": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "682": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "683": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "ADD",
      "path": "0"
    },
    "684": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "691": {
      "op": "SHL"
    },
    "692": {
      "op": "SUB"
    },
    "693": {
      "fn": "Vote.getResults",
      "offset": [
        2275,
        2288
      ],
      "op": "AND",
      "path": "0"
    },
    "694": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "DUP4",
      "path": "0"
    },
    "695": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "696": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "DUP3",
      "path": "0"
    },
    "697": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "ADD",
      "path": "0"
    },
    "698": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "699": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "700": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "701": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "702": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "704": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "ADD",
      "path": "0"
    },
    "705": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "706": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "707": {
      "fn": "Vote.getResults",
      "offset": [
        2252,
        2289
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "708": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2246
      ],
      "op": "DUP3",
      "path": "0"
    },
    "709": {
      "fn": "Vote.getResults",
      "offset": [
        2247,
        2248
      ],
      "op": "DUP3",
      "path": "0"
    },
    "710": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "712": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "713": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "LT",
      "path": "0"
    },
    "714": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "717": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "718": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "728": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "729": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "731": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "733": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "734": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "736": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "738": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "REVERT",
      "path": "0"
    },
    "739": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "742": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "MUL",
      "path": "0"
    },
    "743": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2249
      ],
      "op": "ADD",
      "path": "0"
    },
    "744": {
      "fn": "Vote.getResults",
      "offset": [
        2240,
        2289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "746": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "749": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "750": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "753": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2177,
        2180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "754": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "756": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "POP",
      "path": "0"
    },
    "757": {
      "fn": "Vote.getResults",
      "offset": [
        2177,
        2180
      ],
      "op": "POP",
      "path": "0"
    },
    "758": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "761": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "762": {
      "fn": "Vote.getResults",
      "offset": [
        2136,
        2304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "763": {
      "op": "POP"
    },
    "764": {
      "fn": "Vote.getResults",
      "offset": [
        2322,
        2333
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "765": {
      "fn": "Vote.getResults",
      "offset": [
        2322,
        2333
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "fn": "Vote.getResults",
      "offset": [
        2335,
        2341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "Vote.getResults",
      "offset": [
        1969,
        2349
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "771": {
      "fn": "Vote.getResults",
      "jump": "o",
      "offset": [
        1969,
        2349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "772": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2355,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2433,
        2443
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x4"
    },
    "775": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2433,
        2450
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "776": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2355,
        2457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "Vote.getNumberCandidates",
      "jump": "o",
      "offset": [
        2355,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "778": {
      "offset": [
        298,
        332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "779": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        298,
        332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "781": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        298,
        332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "782": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        298,
        332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "783": {
      "fn": "Vote.getNumberCandidates",
      "jump": "o",
      "offset": [
        298,
        332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "784": {
      "offset": [
        78,
        127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "offset": [
        126,
        127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "787": {
      "offset": [
        78,
        127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "788": {
      "fn": "Vote.getNumberCandidates",
      "jump": "o",
      "offset": [
        78,
        127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "789": {
      "fn": "Vote.vote",
      "offset": [
        1444,
        1963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "790": {
      "fn": "Vote.vote",
      "offset": [
        1517,
        1532
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "792": {
      "fn": "Vote.vote",
      "offset": [
        1517,
        1532
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "793": {
      "fn": "Vote.vote",
      "offset": [
        1502,
        1514
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "794": {
      "branch": 31,
      "fn": "Vote.vote",
      "offset": [
        1502,
        1532
      ],
      "op": "GT",
      "path": "0"
    },
    "795": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x336"
    },
    "798": {
      "branch": 31,
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "799": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "801": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "810": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "813": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "814": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "817": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "818": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FB"
    },
    "821": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1494,
        1583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "822": {
      "fn": "Vote.vote",
      "offset": [
        1494,
        1583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "823": {
      "fn": "Vote.vote",
      "offset": [
        1618,
        1627
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x2"
    },
    "825": {
      "fn": "Vote.vote",
      "offset": [
        1618,
        1627
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "826": {
      "fn": "Vote.vote",
      "offset": [
        1602,
        1614
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "827": {
      "fn": "Vote.vote",
      "offset": [
        1602,
        1627
      ],
      "op": "GT",
      "path": "0"
    },
    "828": {
      "branch": 32,
      "fn": "Vote.vote",
      "offset": [
        1602,
        1627
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "829": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "832": {
      "branch": 32,
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "833": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "835": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "836": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "844": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "845": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "847": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "848": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "851": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "852": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x892"
    },
    "855": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1594,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "856": {
      "fn": "Vote.vote",
      "offset": [
        1594,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "866": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "AND",
      "path": "0"
    },
    "867": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "869": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "872": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "874": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "876": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "877": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "879": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "880": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "881": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "882": {
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "884": {
      "branch": 33,
      "fn": "Vote.vote",
      "offset": [
        1668,
        1700
      ],
      "op": "AND",
      "path": "0"
    },
    "885": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x390"
    },
    "888": {
      "branch": 33,
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "889": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "891": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "901": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "903": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "ADD",
      "path": "0"
    },
    "904": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "907": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "908": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x977"
    },
    "911": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1660,
        1751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "912": {
      "fn": "Vote.vote",
      "offset": [
        1660,
        1751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "913": {
      "fn": "Vote.vote",
      "offset": [
        1789,
        1799
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "914": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "916": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "917": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "918": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "919": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "921": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "923": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "924": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "926": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "927": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "928": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "929": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "931": {
      "fn": "Vote.vote",
      "offset": [
        1771,
        1800
      ],
      "op": "AND",
      "path": "0"
    },
    "932": {
      "branch": 34,
      "fn": "Vote.vote",
      "offset": [
        1770,
        1800
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "933": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0"
    },
    "936": {
      "branch": 34,
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "937": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "939": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "940": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "948": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "949": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "951": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "ADD",
      "path": "0"
    },
    "952": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "955": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "956": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x767"
    },
    "959": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1762,
        1828
      ],
      "op": "JUMP",
      "path": "0"
    },
    "960": {
      "fn": "Vote.vote",
      "offset": [
        1762,
        1828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "961": {
      "fn": "Vote.vote",
      "offset": [
        1857,
        1867
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 15
    },
    "962": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "964": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "965": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "966": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "967": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "969": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "971": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "972": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "973": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "974": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "976": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "977": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "DUP4",
      "path": "0"
    },
    "978": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1868
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "979": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "980": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "983": {
      "op": "NOT"
    },
    "984": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "AND",
      "path": "0"
    },
    "985": {
      "fn": "Vote.vote",
      "offset": [
        1871,
        1875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "987": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "988": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "989": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "OR",
      "path": "0"
    },
    "990": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "991": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "992": {
      "fn": "Vote.vote",
      "offset": [
        1839,
        1875
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 16
    },
    "1002": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "AND",
      "path": "0"
    },
    "1003": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1004": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1005": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1007": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1008": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1009": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1010": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1011": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1012": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1013": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1014": {
      "fn": "Vote.vote",
      "offset": [
        1871,
        1875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1015": {
      "fn": "Vote.vote",
      "offset": [
        1871,
        1875
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1016": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1017": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1918
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1018": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x404"
    },
    "1021": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "Vote.vote",
      "offset": [
        1871,
        1875
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1023": {
      "fn": "Vote.vote",
      "offset": [
        1871,
        1875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1024": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "1027": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1885,
        1923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1028": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1029": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1030": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1031": {
      "fn": "Vote.vote",
      "offset": [
        1885,
        1923
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "op": "POP"
    },
    "1034": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x3"
    },
    "1036": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1037": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1038": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1040": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1041": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "ADD",
      "path": "0"
    },
    "1042": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1043": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1046": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1047": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1049": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1050": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1083": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "ADD",
      "path": "0"
    },
    "1084": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1085": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "op": "NOT"
    },
    "1095": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "1096": {
      "fn": "Vote.vote",
      "offset": [
        1945,
        1955
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1097": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "OR",
      "path": "0"
    },
    "1098": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "Vote.vote",
      "offset": [
        1933,
        1956
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "fn": "Vote.vote",
      "jump": "o",
      "offset": [
        1444,
        1963
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1102": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        949,
        1438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1103": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1019,
        1034
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "1105": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1019,
        1034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1106": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1003,
        1015
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "1107": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1003,
        1034
      ],
      "op": "GT",
      "path": "0"
    },
    "1108": {
      "branch": 35,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1003,
        1034
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1109": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x470"
    },
    "1112": {
      "branch": 35,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1113": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1115": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1124": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1125": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1127": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "ADD",
      "path": "0"
    },
    "1128": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "1131": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1132": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "1135": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        995,
        1099
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1136": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        995,
        1099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1137": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1117,
        1127
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x4"
    },
    "1139": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1117,
        1134
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1140": {
      "offset": [
        126,
        127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1142": {
      "op": "GT"
    },
    "1143": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x492"
    },
    "1146": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1147": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1149": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1150": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1158": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1159": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1161": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "1165": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1166": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91A"
    },
    "1169": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        1109,
        1218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1170": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1109,
        1218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1171": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1269
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "1172": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1174": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1177": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1179": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1181": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1182": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1184": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1185": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1186": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1187": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1189": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1237,
        1270
      ],
      "op": "AND",
      "path": "0"
    },
    "1190": {
      "branch": 36,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1236,
        1270
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1191": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C2"
    },
    "1194": {
      "branch": 36,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1195": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1197": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1206": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1207": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1209": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "ADD",
      "path": "0"
    },
    "1210": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "1213": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1214": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BD"
    },
    "1217": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        1228,
        1335
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1218": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1228,
        1335
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1219": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1376,
        1386
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 21
    },
    "1220": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1222": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1223": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1224": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1225": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1227": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1229": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1230": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1232": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1233": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1387
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1234": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1235": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1238": {
      "op": "NOT"
    },
    "1239": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "AND",
      "path": "0"
    },
    "1240": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1390,
        1394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1242": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1243": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1244": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "OR",
      "path": "0"
    },
    "1245": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1247": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1354,
        1394
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1248": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1414
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x4"
    },
    "1250": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1251": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1252": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1253": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1254": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "ADD",
      "path": "0"
    },
    "1255": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1256": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1257": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1258": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1259": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1260": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1293": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "ADD",
      "path": "0"
    },
    "1294": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1295": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "op": "NOT"
    },
    "1305": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "AND",
      "path": "0"
    },
    "1306": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1308": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "OR",
      "path": "0"
    },
    "1309": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1310": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1404,
        1431
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1311": {
      "fn": "Vote.signupAsCandidate",
      "jump": "o",
      "offset": [
        949,
        1438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1312": {
      "offset": [
        338,
        366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1313": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        338,
        366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1315": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        338,
        366
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1316": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        338,
        366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "Vote.signupAsCandidate",
      "jump": "o",
      "offset": [
        338,
        366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1318": {
      "fn": "Vote.resetMappings",
      "offset": [
        2463,
        2808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1319": {
      "fn": "Vote.resetMappings",
      "offset": [
        2512,
        2521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1321": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1322": {
      "fn": "Vote.resetMappings",
      "offset": [
        2529,
        2539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1324": {
      "fn": "Vote.resetMappings",
      "offset": [
        2529,
        2546
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1325": {
      "fn": "Vote.resetMappings",
      "offset": [
        2525,
        2546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1326": {
      "fn": "Vote.resetMappings",
      "offset": [
        2525,
        2546
      ],
      "op": "LT",
      "path": "0"
    },
    "1327": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1328": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5ED"
    },
    "1331": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1332": {
      "fn": "Vote.resetMappings",
      "offset": [
        2606,
        2611
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x0"
    },
    "1334": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1336": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1338": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1340": {
      "fn": "Vote.resetMappings",
      "offset": [
        2600,
        2601
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1341": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1342": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1343": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1344": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "LT",
      "path": "0"
    },
    "1345": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55A"
    },
    "1348": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1349": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1359": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1360": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "1362": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1364": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1367": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1369": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1370": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1371": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1373": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1374": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1375": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1376": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1378": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1379": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1380": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1381": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1382": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1383": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1384": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "ADD",
      "path": "0"
    },
    "1385": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "AND",
      "path": "0"
    },
    "1395": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1396": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1397": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1398": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "ADD",
      "path": "0"
    },
    "1399": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1400": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1401": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1402": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1403": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1405": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "ADD",
      "path": "0"
    },
    "1406": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1407": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2603
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1408": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1409": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1412": {
      "op": "NOT"
    },
    "1413": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "AND",
      "path": "0"
    },
    "1414": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1415": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1416": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1417": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1418": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1419": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1420": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "OR",
      "path": "0"
    },
    "1421": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1422": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1423": {
      "fn": "Vote.resetMappings",
      "offset": [
        2567,
        2611
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1424": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2658
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x4"
    },
    "1426": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1427": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1428": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1430": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1431": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1432": {
      "fn": "Vote.resetMappings",
      "offset": [
        2589,
        2602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1433": {
      "fn": "Vote.resetMappings",
      "offset": [
        2659,
        2660
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1434": {
      "fn": "Vote.resetMappings",
      "offset": [
        2659,
        2660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1435": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1436": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "LT",
      "path": "0"
    },
    "1437": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "1440": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1441": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1451": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1452": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "1454": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1456": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1457": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1459": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1461": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1462": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1463": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1465": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1466": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1467": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1468": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1470": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1471": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1472": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1473": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1474": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1475": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "ADD",
      "path": "0"
    },
    "1476": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "op": "SUB"
    },
    "1485": {
      "fn": "Vote.resetMappings",
      "offset": [
        2648,
        2661
      ],
      "op": "AND",
      "path": "0"
    },
    "1486": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1487": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1488": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1489": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "ADD",
      "path": "0"
    },
    "1490": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1491": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1492": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1493": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1494": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1496": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "ADD",
      "path": "0"
    },
    "1497": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1498": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1499": {
      "fn": "Vote.resetMappings",
      "offset": [
        2625,
        2666
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1500": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 25
    },
    "1501": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E5"
    },
    "1504": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1505": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "1508": {
      "fn": "Vote.resetMappings",
      "jump": "i",
      "offset": [
        2548,
        2551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1509": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1510": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1511": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "POP",
      "path": "0"
    },
    "1512": {
      "fn": "Vote.resetMappings",
      "offset": [
        2548,
        2551
      ],
      "op": "POP",
      "path": "0"
    },
    "1513": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x529"
    },
    "1516": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1517": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1518": {
      "fn": "Vote.resetMappings",
      "offset": [
        2507,
        2677
      ],
      "op": "POP",
      "path": "0"
    },
    "1519": {
      "fn": "Vote.resetMappings",
      "offset": [
        2704,
        2713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1521": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1522": {
      "fn": "Vote.resetMappings",
      "offset": [
        2721,
        2727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1524": {
      "fn": "Vote.resetMappings",
      "offset": [
        2721,
        2734
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1525": {
      "fn": "Vote.resetMappings",
      "offset": [
        2717,
        2734
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1526": {
      "fn": "Vote.resetMappings",
      "offset": [
        2717,
        2734
      ],
      "op": "LT",
      "path": "0"
    },
    "1527": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1528": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1531": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1532": {
      "fn": "Vote.resetMappings",
      "offset": [
        2786,
        2791
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "1534": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1536": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1538": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1540": {
      "fn": "Vote.resetMappings",
      "offset": [
        2780,
        2781
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1541": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1542": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1543": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1544": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "LT",
      "path": "0"
    },
    "1545": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x622"
    },
    "1548": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1549": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1556": {
      "op": "SHL"
    },
    "1557": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1559": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1560": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "1562": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1564": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1565": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1567": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1569": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1570": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1571": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1573": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1574": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1575": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1576": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1578": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1579": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1580": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1581": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1582": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1583": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1584": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "ADD",
      "path": "0"
    },
    "1585": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "op": "SUB"
    },
    "1594": {
      "fn": "Vote.resetMappings",
      "offset": [
        2773,
        2782
      ],
      "op": "AND",
      "path": "0"
    },
    "1595": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1596": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1597": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1598": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "ADD",
      "path": "0"
    },
    "1599": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1600": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1601": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1602": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1603": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1605": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "ADD",
      "path": "0"
    },
    "1606": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1607": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2783
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1608": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1609": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1612": {
      "op": "NOT"
    },
    "1613": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "AND",
      "path": "0"
    },
    "1614": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1615": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1616": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1617": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1618": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1619": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1620": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "OR",
      "path": "0"
    },
    "1621": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1622": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2791
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1623": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "1624": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "1627": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1628": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "1631": {
      "fn": "Vote.resetMappings",
      "jump": "i",
      "offset": [
        2736,
        2739
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1632": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1633": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1634": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "POP",
      "path": "0"
    },
    "1635": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2739
      ],
      "op": "POP",
      "path": "0"
    },
    "1636": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F1"
    },
    "1639": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1640": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "Vote.resetMappings",
      "offset": [
        2699,
        2802
      ],
      "op": "POP",
      "path": "0"
    },
    "1642": {
      "fn": "Vote.resetMappings",
      "jump": "o",
      "offset": [
        2463,
        2808
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1643": {
      "fn": "Vote.resetArrays",
      "offset": [
        2814,
        2903
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1644": {
      "fn": "Vote.resetArrays",
      "offset": [
        2856,
        2869
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x677"
    },
    "1647": {
      "fn": "Vote.resetArrays",
      "offset": [
        2863,
        2869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1649": {
      "fn": "Vote.resetArrays",
      "offset": [
        2863,
        2869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1651": {
      "fn": "Vote.resetArrays",
      "offset": [
        2856,
        2869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "1654": {
      "fn": "Vote.resetArrays",
      "jump": "i",
      "offset": [
        2856,
        2869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1655": {
      "fn": "Vote.resetArrays",
      "offset": [
        2856,
        2869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1656": {
      "fn": "Vote.resetArrays",
      "offset": [
        2879,
        2896
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x1B5"
    },
    "1659": {
      "fn": "Vote.resetArrays",
      "offset": [
        2886,
        2896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1661": {
      "fn": "Vote.resetArrays",
      "offset": [
        2886,
        2896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1663": {
      "fn": "Vote.resetArrays",
      "offset": [
        2879,
        2896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "1666": {
      "fn": "Vote.resetArrays",
      "jump": "i",
      "offset": [
        2879,
        2896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1667": {
      "op": "JUMPDEST"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1670": {
      "op": "MLOAD"
    },
    "1671": {
      "op": "DUP1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "DUP1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1681": {
      "op": "SWAP1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1684": {
      "op": "DUP3"
    },
    "1685": {
      "op": "MUL"
    },
    "1686": {
      "op": "DUP1"
    },
    "1687": {
      "op": "CALLDATASIZE"
    },
    "1688": {
      "op": "DUP4"
    },
    "1689": {
      "op": "CALLDATACOPY"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "op": "SWAP2"
    },
    "1692": {
      "op": "SWAP3"
    },
    "1693": {
      "op": "SWAP2"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "jump": "o",
      "op": "JUMP"
    },
    "1697": {
      "op": "JUMPDEST"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "DUP1"
    },
    "1700": {
      "op": "SLOAD"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "SSTORE"
    },
    "1705": {
      "op": "SWAP1"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1713": {
      "op": "KECCAK256"
    },
    "1714": {
      "op": "SWAP1"
    },
    "1715": {
      "op": "DUP2"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "SWAP1"
    },
    "1718": {
      "op": "PUSH2",
      "value": "0x668"
    },
    "1721": {
      "op": "SWAP2"
    },
    "1722": {
      "op": "SWAP1"
    },
    "1723": {
      "op": "JUMPDEST"
    },
    "1724": {
      "op": "DUP1"
    },
    "1725": {
      "op": "DUP3"
    },
    "1726": {
      "op": "GT"
    },
    "1727": {
      "op": "ISZERO"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1731": {
      "op": "JUMPI"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1734": {
      "op": "DUP2"
    },
    "1735": {
      "op": "SSTORE"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "1742": {
      "op": "JUMP"
    },
    "1743": {
      "op": "JUMPDEST"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "op": "SWAP1"
    },
    "1746": {
      "jump": "o",
      "op": "JUMP"
    },
    "1747": {
      "op": "JUMPDEST"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1752": {
      "op": "DUP3"
    },
    "1753": {
      "op": "DUP5"
    },
    "1754": {
      "op": "SUB"
    },
    "1755": {
      "op": "SLT"
    },
    "1756": {
      "op": "ISZERO"
    },
    "1757": {
      "op": "PUSH2",
      "value": "0x6E4"
    },
    "1760": {
      "op": "JUMPI"
    },
    "1761": {
      "op": "DUP1"
    },
    "1762": {
      "op": "DUP2"
    },
    "1763": {
      "op": "REVERT"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "DUP2"
    },
    "1766": {
      "op": "CALLDATALOAD"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1773": {
      "op": "SHL"
    },
    "1774": {
      "op": "SUB"
    },
    "1775": {
      "op": "DUP2"
    },
    "1776": {
      "op": "AND"
    },
    "1777": {
      "op": "DUP2"
    },
    "1778": {
      "op": "EQ"
    },
    "1779": {
      "op": "PUSH2",
      "value": "0x6FA"
    },
    "1782": {
      "op": "JUMPI"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "DUP3"
    },
    "1785": {
      "op": "REVERT"
    },
    "1786": {
      "op": "JUMPDEST"
    },
    "1787": {
      "op": "SWAP4"
    },
    "1788": {
      "op": "SWAP3"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "jump": "o",
      "op": "JUMP"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1797": {
      "op": "DUP2"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "DUP2"
    },
    "1800": {
      "op": "DUP5"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1803": {
      "op": "JUMPDEST"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1806": {
      "op": "DUP2"
    },
    "1807": {
      "op": "LT"
    },
    "1808": {
      "op": "ISZERO"
    },
    "1809": {
      "op": "PUSH2",
      "value": "0x733"
    },
    "1812": {
      "op": "JUMPI"
    },
    "1813": {
      "op": "DUP2"
    },
    "1814": {
      "op": "MLOAD"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "op": "AND"
    },
    "1824": {
      "op": "DUP4"
    },
    "1825": {
      "op": "MSTORE"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1828": {
      "op": "SWAP3"
    },
    "1829": {
      "op": "DUP4"
    },
    "1830": {
      "op": "ADD"
    },
    "1831": {
      "op": "SWAP3"
    },
    "1832": {
      "op": "SWAP1"
    },
    "1833": {
      "op": "SWAP2"
    },
    "1834": {
      "op": "ADD"
    },
    "1835": {
      "op": "SWAP1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "PUSH2",
      "value": "0x70B"
    },
    "1842": {
      "op": "JUMP"
    },
    "1843": {
      "op": "JUMPDEST"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "DUP3"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "DUP4"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1854": {
      "op": "JUMPDEST"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1857": {
      "op": "DUP2"
    },
    "1858": {
      "op": "LT"
    },
    "1859": {
      "op": "ISZERO"
    },
    "1860": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1863": {
      "op": "JUMPI"
    },
    "1864": {
      "op": "DUP2"
    },
    "1865": {
      "op": "MLOAD"
    },
    "1866": {
      "op": "DUP4"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1870": {
      "op": "SWAP3"
    },
    "1871": {
      "op": "DUP4"
    },
    "1872": {
      "op": "ADD"
    },
    "1873": {
      "op": "SWAP3"
    },
    "1874": {
      "op": "SWAP1"
    },
    "1875": {
      "op": "SWAP2"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "SWAP1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x73E"
    },
    "1884": {
      "op": "JUMP"
    },
    "1885": {
      "op": "JUMPDEST"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "SWAP4"
    },
    "1890": {
      "op": "SWAP3"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "jump": "o",
      "op": "JUMP"
    },
    "1895": {
      "op": "JUMPDEST"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1898": {
      "op": "DUP1"
    },
    "1899": {
      "op": "DUP3"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1903": {
      "op": "SWAP1"
    },
    "1904": {
      "op": "DUP3"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "op": "MSTORE"
    },
    "1907": {
      "op": "PUSH32",
      "value": "0x596F75206861766520616C726561647920766F7465642E000000000000000000"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1942": {
      "op": "DUP3"
    },
    "1943": {
      "op": "ADD"
    },
    "1944": {
      "op": "MSTORE"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "SWAP1"
    },
    "1949": {
      "jump": "o",
      "op": "JUMP"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1953": {
      "op": "DUP1"
    },
    "1954": {
      "op": "DUP3"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "1958": {
      "op": "SWAP1"
    },
    "1959": {
      "op": "DUP3"
    },
    "1960": {
      "op": "ADD"
    },
    "1961": {
      "op": "MSTORE"
    },
    "1962": {
      "op": "PUSH32",
      "value": "0x596F752063616E206E6F206C6F6E676572207265676973746572206173206120"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1997": {
      "op": "DUP3"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH32",
      "value": "0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2035": {
      "op": "DUP3"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "MSTORE"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "SWAP1"
    },
    "2042": {
      "jump": "o",
      "op": "JUMP"
    },
    "2043": {
      "op": "JUMPDEST"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2046": {
      "op": "DUP1"
    },
    "2047": {
      "op": "DUP3"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2051": {
      "op": "SWAP1"
    },
    "2052": {
      "op": "DUP3"
    },
    "2053": {
      "op": "ADD"
    },
    "2054": {
      "op": "MSTORE"
    },
    "2055": {
      "op": "PUSH32",
      "value": "0x50617469656E63652C2074686520726567697374726174696F6E20706572696F"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH14",
      "value": "0x64206973206E6F74206F76657221"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2113": {
      "op": "DUP3"
    },
    "2114": {
      "op": "ADD"
    },
    "2115": {
      "op": "MSTORE"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "SWAP1"
    },
    "2120": {
      "jump": "o",
      "op": "JUMP"
    },
    "2121": {
      "op": "JUMPDEST"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2124": {
      "op": "DUP1"
    },
    "2125": {
      "op": "DUP3"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2129": {
      "op": "SWAP1"
    },
    "2130": {
      "op": "DUP3"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "MSTORE"
    },
    "2133": {
      "op": "PUSH32",
      "value": "0x50617469656E63652C207468652063757272656E7420766F74696E6720697320"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2168": {
      "op": "DUP3"
    },
    "2169": {
      "op": "ADD"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "op": "PUSH9",
      "value": "0x3737BA1037BB32B917"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2186": {
      "op": "DUP3"
    },
    "2187": {
      "op": "ADD"
    },
    "2188": {
      "op": "MSTORE"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2191": {
      "op": "ADD"
    },
    "2192": {
      "op": "SWAP1"
    },
    "2193": {
      "jump": "o",
      "op": "JUMP"
    },
    "2194": {
      "op": "JUMPDEST"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2197": {
      "op": "DUP1"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "MSTORE"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2202": {
      "op": "SWAP1"
    },
    "2203": {
      "op": "DUP3"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "PUSH17",
      "value": "0x2A3432903B37BA329034B99037BB32B917"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "op": "SWAP1"
    },
    "2236": {
      "jump": "o",
      "op": "JUMP"
    },
    "2237": {
      "op": "JUMPDEST"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2240": {
      "op": "DUP1"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2245": {
      "op": "SWAP1"
    },
    "2246": {
      "op": "DUP3"
    },
    "2247": {
      "op": "ADD"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH32",
      "value": "0x596F752061726520616C72656164792072656769737465726564206173206120"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH32",
      "value": "0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2322": {
      "op": "DUP3"
    },
    "2323": {
      "op": "ADD"
    },
    "2324": {
      "op": "MSTORE"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "SWAP1"
    },
    "2329": {
      "jump": "o",
      "op": "JUMP"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "DUP1"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "2338": {
      "op": "SWAP1"
    },
    "2339": {
      "op": "DUP3"
    },
    "2340": {
      "op": "ADD"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D206E756D626572206F662063616E6469646174657320726561"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2377": {
      "op": "DUP3"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH32",
      "value": "0x6368656420666F72207468697320656C656374696F6E2E000000000000000000"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "SWAP1"
    },
    "2422": {
      "jump": "o",
      "op": "JUMP"
    },
    "2423": {
      "op": "JUMPDEST"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2426": {
      "op": "DUP1"
    },
    "2427": {
      "op": "DUP3"
    },
    "2428": {
      "op": "MSTORE"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2431": {
      "op": "SWAP1"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "PUSH32",
      "value": "0x546869732061646472657373206973206E6F7420726567697374657265642061"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH14",
      "value": "0x3990309031B0B73234B230BA3297"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "MSTORE"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2498": {
      "op": "ADD"
    },
    "2499": {
      "op": "SWAP1"
    },
    "2500": {
      "jump": "o",
      "op": "JUMP"
    },
    "2501": {
      "op": "JUMPDEST"
    },
    "2502": {
      "op": "SWAP1"
    },
    "2503": {
      "op": "DUP2"
    },
    "2504": {
      "op": "MSTORE"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2507": {
      "op": "ADD"
    },
    "2508": {
      "op": "SWAP1"
    },
    "2509": {
      "jump": "o",
      "op": "JUMP"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2513": {
      "op": "DUP3"
    },
    "2514": {
      "op": "NOT"
    },
    "2515": {
      "op": "DUP3"
    },
    "2516": {
      "op": "GT"
    },
    "2517": {
      "op": "ISZERO"
    },
    "2518": {
      "op": "PUSH2",
      "value": "0x9E1"
    },
    "2521": {
      "op": "JUMPI"
    },
    "2522": {
      "op": "PUSH2",
      "value": "0x9E1"
    },
    "2525": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "2528": {
      "jump": "i",
      "op": "JUMP"
    },
    "2529": {
      "op": "JUMPDEST"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "op": "ADD"
    },
    "2532": {
      "op": "SWAP1"
    },
    "2533": {
      "jump": "o",
      "op": "JUMP"
    },
    "2534": {
      "op": "JUMPDEST"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2539": {
      "op": "NOT"
    },
    "2540": {
      "op": "DUP3"
    },
    "2541": {
      "op": "EQ"
    },
    "2542": {
      "op": "ISZERO"
    },
    "2543": {
      "op": "PUSH2",
      "value": "0x9FA"
    },
    "2546": {
      "op": "JUMPI"
    },
    "2547": {
      "op": "PUSH2",
      "value": "0x9FA"
    },
    "2550": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "2553": {
      "jump": "i",
      "op": "JUMP"
    },
    "2554": {
      "op": "JUMPDEST"
    },
    "2555": {
      "op": "POP"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "SWAP1"
    },
    "2560": {
      "jump": "o",
      "op": "JUMP"
    },
    "2561": {
      "op": "JUMPDEST"
    },
    "2562": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2572": {
      "op": "MSTORE"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2577": {
      "op": "MSTORE"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2582": {
      "op": "REVERT"
    }
  },
  "sha1": "c5456d12cf51c118a02b9d6896e9e3834d3476a7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\ncontract Vote {\n    uint256 public constant MAX_NUMBER_CANDIDATES = 5;\n    uint256 public constant LENGTH_REGISTRATION_IN_BLOCKS = 20;\n    uint256 public constant LENGTH_VOTING_IN_BLOCKS = 50;\n\n    uint256 public startRegistration = 0;\n    uint256 public endRegistration = 0;\n    uint256 public endVoting = 0;\n\n    address[] voters;\n    address[] candidates;\n\n    mapping(address => bool) accountToHasVoted;\n    mapping(address => bool) accountToRegistration;\n    mapping(address => uint256) public accountToVotesReceived;\n\n    function initiateElection() public {\n        require(block.number > endVoting, \"Patience, the current voting is not over.\");\n\n        startRegistration = block.number;\n        endRegistration = block.number + LENGTH_REGISTRATION_IN_BLOCKS;\n        endVoting = endRegistration + LENGTH_VOTING_IN_BLOCKS;\n\n        resetMappings();\n        resetArrays();\n    }\n\n    function signupAsCandidate() public {\n        require(block.number <= endRegistration, \"You can no longer register as a candidate for this election.\");\n        require(candidates.length < MAX_NUMBER_CANDIDATES, \"Maximum number of candidates reached for this election.\");\n        require(!accountToRegistration[msg.sender], \"You are already registered as a candidate for this election.\");\n        \n        accountToRegistration[msg.sender] = true;\n        candidates.push(msg.sender);\n    }\n\n    function vote(address candidate) public {\n        require(block.number > endRegistration, \"Patience, the registration period is not over!\"); \n        require(block.number <= endVoting, \"The vote is over.\"); \n        require(accountToRegistration[candidate], \"This address is not registered as a candidate.\"); \n        require(!accountToHasVoted[msg.sender], \"You have already voted.\");\n\n        accountToHasVoted[msg.sender] = true;\n        accountToVotesReceived[candidate] += 1;\n        voters.push(msg.sender);\n    }\n\n    function getResults() public view returns (address[5] memory, uint256[5] memory) {\n        address[5]  memory candidates_;\n        uint256[5]  memory votes_;\n\n        for (uint256 i=0; i < candidates.length; i++) {\n            candidates_[i] = candidates[i];\n            votes_[i] = accountToVotesReceived[candidates[i]];\n   \n        }\n\n        return (candidates_, votes_);\n    }\n\n    function getNumberCandidates() public view returns (uint256) {\n        return candidates.length;\n    }\n\n    function resetMappings() internal {\n        for (uint256 i=0; i < candidates.length; i++) {\n            accountToRegistration[candidates[i]] = false;\n            accountToVotesReceived[candidates[i]] = 0;\n        }\n            \n        for (uint256 i=0; i < voters.length; i++) {\n            accountToHasVoted[voters[i]] = false;\n        }\n    }\n\n    function resetArrays() internal {\n        delete voters;\n        delete candidates;\n    }\n\n}",
  "sourceMap": "58:2848:0:-:0;;;291:1;256:36;;331:1;298:34;;365:1;338:28;;58:2848;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vote.sol",
  "type": "contract"
}