{
  "abi": [
    {
      "inputs": [],
      "name": "LENGTH_REGISTRATION_IN_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENGTH_VOTING_IN_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUMBER_CANDIDATES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountToVotesReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endRegistration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endVoting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberCandidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResults",
      "outputs": [
        {
          "internalType": "address[5]",
          "name": "",
          "type": "address[5]"
        },
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signupAsCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "candidate",
          "type": "address"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Vote.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vote.sol",
    "exportedSymbols": {
      "Vote": [
        319
      ]
    },
    "id": 320,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319
        ],
        "name": "Vote",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "58cb805b",
            "id": 4,
            "mutability": "constant",
            "name": "MAX_NUMBER_CANDIDATES",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "78:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "78:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "126:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3bdac454",
            "id": 7,
            "mutability": "constant",
            "name": "LENGTH_REGISTRATION_IN_BLOCKS",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "133:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "133:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "189:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1c599396",
            "id": 10,
            "mutability": "constant",
            "name": "LENGTH_VOTING_IN_BLOCKS",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "197:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "247:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a8a62ab",
            "id": 13,
            "mutability": "mutable",
            "name": "endRegistration",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "256:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "256:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "289:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3403ddf",
            "id": 16,
            "mutability": "mutable",
            "name": "endVoting",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "296:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "296:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "323:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "331:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "331:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "331:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "candidates",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "353:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "353:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 21,
              "nodeType": "ArrayTypeName",
              "src": "353:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "accountToHasVoted",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "380:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "388:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "380:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 24,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "399:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "accountToRegistration",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "428:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "436:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "428:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 28,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "447:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "39df9932",
            "id": 34,
            "mutability": "mutable",
            "name": "accountToVotesReceived",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "480:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "488:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "480:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 32,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "499:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "579:280:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "597:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "597:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 40,
                          "name": "endVoting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "612:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "597:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e63652c207468652063757272656e7420766f74696e67206973206e6f74206f7665722e",
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "623:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ec66a14372a6bc4835f9e5159e05267eba7128cea5590aa74414dcc215d1f65",
                          "typeString": "literal_string \"Patience, the current voting is not over.\""
                        },
                        "value": "Patience, the current voting is not over."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ec66a14372a6bc4835f9e5159e05267eba7128cea5590aa74414dcc215d1f65",
                          "typeString": "literal_string \"Patience, the current voting is not over.\""
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "589:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "589:78:0"
                },
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "endRegistration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "678:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 46,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "696:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "696:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 48,
                        "name": "LENGTH_REGISTRATION_IN_BLOCKS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "711:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "696:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "678:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "678:62:0"
                },
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52,
                      "name": "endVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "750:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 53,
                        "name": "endRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "762:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 54,
                        "name": "LENGTH_VOTING_IN_BLOCKS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "780:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "762:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "750:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "750:53:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58,
                      "name": "resetMappings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "814:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "814:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "814:15:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 61,
                      "name": "resetArrays",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "839:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "839:13:0"
                }
              ]
            },
            "functionSelector": "0ff9e259",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiateElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:2:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:0"
            },
            "scope": 319,
            "src": "544:315:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "901:568:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 69,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "919:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "919:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 71,
                          "name": "endRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "935:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "919:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206e6f206c6f6e67657220726567697374657220617320612063616e64696461746520666f72207468697320656c656374696f6e2e",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_538beb36b81d496fc95d4119d3b11ade57fc4f324760ab010a29c5ad1289eb1f",
                          "typeString": "literal_string \"You can no longer register as a candidate for this election.\""
                        },
                        "value": "You can no longer register as a candidate for this election."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_538beb36b81d496fc95d4119d3b11ade57fc4f324760ab010a29c5ad1289eb1f",
                          "typeString": "literal_string \"You can no longer register as a candidate for this election.\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "911:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "911:104:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1033:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1033:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 79,
                          "name": "MAX_NUMBER_CANDIDATES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1053:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1033:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d206e756d626572206f662063616e64696461746573207265616368656420666f72207468697320656c656374696f6e2e",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1076:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf23588ec273a27a72fa551e7d789f2abecaf3ca8257ec7360eb1aa4350c40d1",
                          "typeString": "literal_string \"Maximum number of candidates reached for this election.\""
                        },
                        "value": "Maximum number of candidates reached for this election."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf23588ec273a27a72fa551e7d789f2abecaf3ca8257ec7360eb1aa4350c40d1",
                          "typeString": "literal_string \"Maximum number of candidates reached for this election.\""
                        }
                      ],
                      "id": 76,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 85,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1152:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1152:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 87,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1166:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1152:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792065787465726e616c6c79206f776e6564206163636f756e74732068617665207468652072696768742072656769737465722061732063616e646964617465732e",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_538340a75234d539b41642ea669ce229e25105a5fd2807f27ea093dd4761e106",
                          "typeString": "literal_string \"Only externally owned accounts have the right register as candidates.\""
                        },
                        "value": "Only externally owned accounts have the right register as candidates."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_538340a75234d539b41642ea669ce229e25105a5fd2807f27ea093dd4761e106",
                          "typeString": "literal_string \"Only externally owned accounts have the right register as candidates.\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1144:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1267:34:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 94,
                            "name": "accountToRegistration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1268:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 97,
                          "indexExpression": {
                            "expression": {
                              "id": 95,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1290:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1290:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1268:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320612063616e64696461746520666f72207468697320656c656374696f6e2e",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1303:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d0857d8afc7dd1aeaf7fe48ec7782408c5c955ae522a0a9f02db410fc05be53",
                          "typeString": "literal_string \"You are already registered as a candidate for this election.\""
                        },
                        "value": "You are already registered as a candidate for this election."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d0857d8afc7dd1aeaf7fe48ec7782408c5c955ae522a0a9f02db410fc05be53",
                          "typeString": "literal_string \"You are already registered as a candidate for this election.\""
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1259:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:107:0"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "accountToRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1385:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1407:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1407:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1385:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1421:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1385:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1451:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1451:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 109,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1435:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1435:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:27:0"
                }
              ]
            },
            "functionSelector": "82e5dae5",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signupAsCandidate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:2:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:0"
            },
            "scope": 319,
            "src": "865:604:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1515:579:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 123,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1533:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1533:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 125,
                          "name": "endRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1548:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1533:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e63652c2074686520726567697374726174696f6e20706572696f64206973206e6f74206f76657221",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59ed22fcb7d203a09b10aa6e56740e76a8ea683bc5d57c92b1d8efdfbede469d",
                          "typeString": "literal_string \"Patience, the registration period is not over!\""
                        },
                        "value": "Patience, the registration period is not over!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59ed22fcb7d203a09b10aa6e56740e76a8ea683bc5d57c92b1d8efdfbede469d",
                          "typeString": "literal_string \"Patience, the registration period is not over!\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1525:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 131,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1633:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "1633:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 133,
                          "name": "endVoting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1649:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1633:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520766f7465206973206f7665722e",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_878b62218020a387be6b873557dd705a424a09b77a8f413e27db15bc1831fdc1",
                          "typeString": "literal_string \"The vote is over.\""
                        },
                        "value": "The vote is over."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_878b62218020a387be6b873557dd705a424a09b77a8f413e27db15bc1831fdc1",
                          "typeString": "literal_string \"The vote is over.\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1625:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1699:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1699:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 141,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1713:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1713:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1699:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792065787465726e616c6c79206f776e6564206163636f756e747320686176652074686520726967687420746f20766f74652e",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96b7ae5ef2a59a902b59a0a6d4e70219e4e1b926bff199282a32b9977b94c6f9",
                          "typeString": "literal_string \"Only externally owned accounts have the right to vote.\""
                        },
                        "value": "Only externally owned accounts have the right to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96b7ae5ef2a59a902b59a0a6d4e70219e4e1b926bff199282a32b9977b94c6f9",
                          "typeString": "literal_string \"Only externally owned accounts have the right to vote.\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1691:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1691:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1691:90:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 148,
                          "name": "accountToRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1799:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "id": 149,
                          "name": "candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "1821:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1799:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732061646472657373206973206e6f74207265676973746572656420617320612063616e6469646174652e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1833:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d266d63f07bc1dce785e719184d0e8f13fd0b02677623cdb22098692d7c6c680",
                          "typeString": "literal_string \"This address is not registered as a candidate.\""
                        },
                        "value": "This address is not registered as a candidate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d266d63f07bc1dce785e719184d0e8f13fd0b02677623cdb22098692d7c6c680",
                          "typeString": "literal_string \"This address is not registered as a candidate.\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1791:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1901:30:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 155,
                            "name": "accountToHasVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1902:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 158,
                          "indexExpression": {
                            "expression": {
                              "id": 156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1920:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1920:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1902:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c726561647920766f7465642e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1933:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1814df8007c14967d1dedfd016a222fa9f9d3d95d881e38c6e569314cca84863",
                          "typeString": "literal_string \"You have already voted.\""
                        },
                        "value": "You have already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1814df8007c14967d1dedfd016a222fa9f9d3d95d881e38c6e569314cca84863",
                          "typeString": "literal_string \"You have already voted.\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1893:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:66:0"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 163,
                        "name": "accountToHasVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1970:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 166,
                      "indexExpression": {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1988:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1988:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2002:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1970:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:36:0"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 170,
                        "name": "accountToVotesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2016:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 172,
                      "indexExpression": {
                        "id": 171,
                        "name": "candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2039:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2016:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2053:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2016:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2076:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2076:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 176,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2064:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2064:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:23:0"
                }
              ]
            },
            "functionSelector": "6dd7d8ea",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "candidate",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1489:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1488:19:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1515:0:0"
            },
            "scope": 319,
            "src": "1475:619:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "2221:335:0",
              "statements": [
                {
                  "assignments": [
                    200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "candidates_",
                      "nodeType": "VariableDeclaration",
                      "scope": 244,
                      "src": "2231:50:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                        "typeString": "address[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2231:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 199,
                        "length": {
                          "id": 197,
                          "name": "MAX_NUMBER_CANDIDATES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2239:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2231:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                          "typeString": "address[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2231:50:0"
                },
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "votes_",
                      "nodeType": "VariableDeclaration",
                      "scope": 244,
                      "src": "2291:45:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                        "typeString": "uint256[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 206,
                        "length": {
                          "id": 204,
                          "name": "MAX_NUMBER_CANDIDATES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2299:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2291:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                          "typeString": "uint256[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:45:0"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "2393:118:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 220,
                              "name": "candidates_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "2407:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                                "typeString": "address[5] memory"
                              }
                            },
                            "id": 222,
                            "indexExpression": {
                              "id": 221,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "2419:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2407:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 223,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "2424:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "id": 224,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "2435:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2424:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2407:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2407:30:0"
                      },
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 228,
                              "name": "votes_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "2451:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                                "typeString": "uint256[5] memory"
                              }
                            },
                            "id": 230,
                            "indexExpression": {
                              "id": 229,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "2458:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2451:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 231,
                              "name": "accountToVotesReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2463:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 235,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 232,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2486:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 234,
                              "indexExpression": {
                                "id": 233,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "2497:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2486:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2463:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2451:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "2451:49:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 213,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2365:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 214,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2369:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2369:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2365:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "initializationExpression": {
                    "assignments": [
                      210
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "2352:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2352:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 212,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2362:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2352:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2388:3:0",
                      "subExpression": {
                        "id": 217,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2388:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 219,
                    "nodeType": "ExpressionStatement",
                    "src": "2388:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2347:164:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 240,
                        "name": "candidates_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2529:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                          "typeString": "address[5] memory"
                        }
                      },
                      {
                        "id": 241,
                        "name": "votes_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2542:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                          "typeString": "uint256[5] memory"
                        }
                      }
                    ],
                    "id": 242,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2528:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$5_memory_ptr_$",
                      "typeString": "tuple(address[5] memory,uint256[5] memory)"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 243,
                  "nodeType": "Return",
                  "src": "2521:28:0"
                }
              ]
            },
            "functionSelector": "4717f97c",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2119:2:0"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2143:37:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                    "typeString": "address[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 186,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2143:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 188,
                    "length": {
                      "id": 187,
                      "name": "MAX_NUMBER_CANDIDATES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "2151:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2143:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2182:37:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 190,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2182:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 192,
                    "length": {
                      "id": 191,
                      "name": "MAX_NUMBER_CANDIDATES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "2190:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2182:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2142:78:0"
            },
            "scope": 319,
            "src": "2100:456:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "2623:41:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 250,
                      "name": "candidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2640:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2640:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 252,
                  "nodeType": "Return",
                  "src": "2633:24:0"
                }
              ]
            },
            "functionSelector": "493f584c",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberCandidates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2590:2:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "2614:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2613:9:0"
            },
            "scope": 319,
            "src": "2562:102:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "2704:311:0",
              "statements": [
                {
                  "body": {
                    "id": 284,
                    "nodeType": "Block",
                    "src": "2760:124:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 268,
                              "name": "accountToRegistration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2774:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 272,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 269,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2796:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 271,
                              "indexExpression": {
                                "id": 270,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 258,
                                "src": "2807:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2796:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2774:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2813:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2774:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "2774:44:0"
                      },
                      {
                        "expression": {
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 276,
                              "name": "accountToVotesReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2832:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 280,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 277,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2855:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 279,
                              "indexExpression": {
                                "id": 278,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 258,
                                "src": "2866:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2855:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2832:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2872:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2832:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 283,
                        "nodeType": "ExpressionStatement",
                        "src": "2832:41:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 261,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "2732:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 262,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2736:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2736:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2732:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 285,
                  "initializationExpression": {
                    "assignments": [
                      258
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "2719:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2719:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 260,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2729:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2719:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2755:3:0",
                      "subExpression": {
                        "id": 265,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "2755:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 267,
                    "nodeType": "ExpressionStatement",
                    "src": "2755:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2714:170:0"
                },
                {
                  "body": {
                    "id": 305,
                    "nodeType": "Block",
                    "src": "2948:61:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 297,
                              "name": "accountToHasVoted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2962:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 301,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 298,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "2980:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 300,
                              "indexExpression": {
                                "id": 299,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "2987:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2980:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2962:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2993:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2962:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "2962:36:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 290,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "2924:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 291,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2928:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2928:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2924:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 306,
                  "initializationExpression": {
                    "assignments": [
                      287
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "2911:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2911:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 289,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2921:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2911:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2943:3:0",
                      "subExpression": {
                        "id": 294,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "2943:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 296,
                    "nodeType": "ExpressionStatement",
                    "src": "2943:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2906:103:0"
                }
              ]
            },
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetMappings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2692:2:0"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:0:0"
            },
            "scope": 319,
            "src": "2670:345:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3053:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3063:13:0",
                    "subExpression": {
                      "id": 311,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3070:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3063:13:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3086:17:0",
                    "subExpression": {
                      "id": 314,
                      "name": "candidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3093:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:17:0"
                }
              ]
            },
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetArrays",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3041:2:0"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3053:0:0"
            },
            "scope": 319,
            "src": "3021:89:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 320,
        "src": "58:3055:0"
      }
    ],
    "src": "32:3082:0"
  },
  "bytecode": "608060405260008055600060015534801561001957600080fd5b50610b2c806100296000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063493f584c11610071578063493f584c146101075780634a8a62ab1461010f57806358cb805b146101175780636dd7d8ea1461011f57806382e5dae514610132578063c3403ddf1461013a576100a9565b80630ff9e259146100ae5780631c599396146100b857806339df9932146100d65780633bdac454146100e95780634717f97c146100f1575b600080fd5b6100b6610142565b005b6100c061019d565b6040516100cd9190610aa4565b60405180910390f35b6100c06100e43660046106f1565b6101a2565b6100c06101b4565b6100f96101b9565b6040516100cd92919061071f565b6100c06102e4565b6100c06102ea565b6100c06102f0565b6100b661012d3660046106f1565b6102f5565b6100b661044d565b6100c061053e565b600154431161016c5760405162461bcd60e51b8152600401610163906108d2565b60405180910390fd5b610177601443610aad565b600081905561018890603290610aad565b600155610193610544565b61019b610689565b565b603281565b60066020526000908152604090205481565b601481565b6101c16106a1565b6101c96106a1565b6101d16106a1565b6101d96106a1565b60005b6003548110156102da576003818154811061020757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031683826005811061023c57634e487b7160e01b600052603260045260246000fd5b60200201906001600160a01b031690816001600160a01b031681525050600660006003838154811061027e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548282600581106102c357634e487b7160e01b600052603260045260246000fd5b6020020152806102d281610ac5565b9150506101dc565b5090925090509091565b60035490565b60005481565b600581565b60005443116103165760405162461bcd60e51b815260040161016390610884565b6001544311156103385760405162461bcd60e51b81526004016101639061091b565b3332146103575760405162461bcd60e51b8152600401610163906109a3565b6001600160a01b03811660009081526005602052604090205460ff1661038f5760405162461bcd60e51b815260040161016390610a56565b3360009081526004602052604090205460ff16156103bf5760405162461bcd60e51b815260040161016390610785565b336000908152600460209081526040808320805460ff191660019081179091556001600160a01b038516845260069092528220805491929091610403908490610aad565b9091555050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319163317905550565b60005443111561046f5760405162461bcd60e51b815260040161016390610827565b6003546005116104915760405162461bcd60e51b8152600401610163906109f9565b3332146104b05760405162461bcd60e51b8152600401610163906107bc565b3360009081526005602052604090205460ff16156104e05760405162461bcd60e51b815260040161016390610946565b336000818152600560205260408120805460ff191660019081179091556003805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169091179055565b60015481565b60005b60035481101561060b576000600560006003848154811061057857634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040018120805460ff191692151592909217909155600380546006918391859081106105d457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020558061060381610ac5565b915050610547565b5060005b600254811015610686576000600460006002848154811061064057634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061067e81610ac5565b91505061060f565b50565b610695600260006106bf565b61019b600360006106bf565b6040518060a001604052806005906020820280368337509192915050565b508054600082559060005260206000209081019061068691905b808211156106ed57600081556001016106d9565b5090565b600060208284031215610702578081fd5b81356001600160a01b0381168114610718578182fd5b9392505050565b6101408101818460005b60058110156107515781516001600160a01b0316835260209283019290910190600101610729565b50505060a082018360005b600581101561077b57815183526020928301929091019060010161075c565b5050509392505050565b60208082526017908201527f596f75206861766520616c726561647920766f7465642e000000000000000000604082015260600190565b60208082526045908201527f4f6e6c792065787465726e616c6c79206f776e6564206163636f756e7473206860408201527f617665207468652072696768742072656769737465722061732063616e64696460608201526430ba32b99760d91b608082015260a00190565b6020808252603c908201527f596f752063616e206e6f206c6f6e67657220726567697374657220617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b6020808252602e908201527f50617469656e63652c2074686520726567697374726174696f6e20706572696f60408201526d64206973206e6f74206f7665722160901b606082015260800190565b60208082526029908201527f50617469656e63652c207468652063757272656e7420766f74696e67206973206040820152683737ba1037bb32b91760b91b606082015260800190565b6020808252601190820152702a3432903b37ba329034b99037bb32b91760791b604082015260600190565b6020808252603c908201527f596f752061726520616c7265616479207265676973746572656420617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b60208082526036908201527f4f6e6c792065787465726e616c6c79206f776e6564206163636f756e7473206860408201527530bb32903a3432903934b3b43a103a37903b37ba329760511b606082015260800190565b60208082526037908201527f4d6178696d756d206e756d626572206f662063616e646964617465732072656160408201527f6368656420666f72207468697320656c656374696f6e2e000000000000000000606082015260800190565b6020808252602e908201527f546869732061646472657373206973206e6f742072656769737465726564206160408201526d3990309031b0b73234b230ba329760911b606082015260800190565b90815260200190565b60008219821115610ac057610ac0610ae0565b500190565b6000600019821415610ad957610ad9610ae0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207756000bd6db03c042a6414dbd255f3c4d77786e84e47320902c02a38f02c90f64736f6c63430008000033",
  "bytecodeSha1": "e1307be4f5e0eb13466d06f0fa618e6839d10515",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "Vote",
  "coverageMap": {
    "branches": {
      "0": {
        "Vote.initiateElection": {
          "31": [
            597,
            621,
            true
          ]
        },
        "Vote.signupAsCandidate": {
          "37": [
            919,
            950,
            true
          ],
          "38": [
            1152,
            1175,
            true
          ],
          "39": [
            1267,
            1301,
            true
          ]
        },
        "Vote.vote": {
          "32": [
            1533,
            1563,
            true
          ],
          "33": [
            1633,
            1658,
            true
          ],
          "34": [
            1699,
            1722,
            true
          ],
          "35": [
            1799,
            1831,
            true
          ],
          "36": [
            1901,
            1931,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Vote.getNumberCandidates": {
          "9": [
            2633,
            2657
          ]
        },
        "Vote.getResults": {
          "5": [
            2407,
            2437
          ],
          "6": [
            2451,
            2500
          ],
          "7": [
            2388,
            2391
          ],
          "8": [
            2521,
            2549
          ]
        },
        "Vote.initiateElection": {
          "0": [
            589,
            667
          ],
          "1": [
            678,
            740
          ],
          "2": [
            750,
            803
          ],
          "3": [
            814,
            829
          ],
          "4": [
            839,
            852
          ]
        },
        "Vote.resetArrays": {
          "29": [
            3063,
            3076
          ],
          "30": [
            3086,
            3103
          ]
        },
        "Vote.resetMappings": {
          "24": [
            2774,
            2818
          ],
          "25": [
            2832,
            2873
          ],
          "26": [
            2755,
            2758
          ],
          "27": [
            2962,
            2998
          ],
          "28": [
            2943,
            2946
          ]
        },
        "Vote.signupAsCandidate": {
          "18": [
            911,
            1015
          ],
          "19": [
            1025,
            1134
          ],
          "20": [
            1144,
            1249
          ],
          "21": [
            1259,
            1366
          ],
          "22": [
            1385,
            1425
          ],
          "23": [
            1435,
            1462
          ]
        },
        "Vote.vote": {
          "10": [
            1525,
            1614
          ],
          "11": [
            1625,
            1680
          ],
          "12": [
            1691,
            1781
          ],
          "13": [
            1791,
            1882
          ],
          "14": [
            1893,
            1959
          ],
          "15": [
            1970,
            2006
          ],
          "16": [
            2016,
            2054
          ],
          "17": [
            2064,
            2087
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063493f584c11610071578063493f584c146101075780634a8a62ab1461010f57806358cb805b146101175780636dd7d8ea1461011f57806382e5dae514610132578063c3403ddf1461013a576100a9565b80630ff9e259146100ae5780631c599396146100b857806339df9932146100d65780633bdac454146100e95780634717f97c146100f1575b600080fd5b6100b6610142565b005b6100c061019d565b6040516100cd9190610aa4565b60405180910390f35b6100c06100e43660046106f1565b6101a2565b6100c06101b4565b6100f96101b9565b6040516100cd92919061071f565b6100c06102e4565b6100c06102ea565b6100c06102f0565b6100b661012d3660046106f1565b6102f5565b6100b661044d565b6100c061053e565b600154431161016c5760405162461bcd60e51b8152600401610163906108d2565b60405180910390fd5b610177601443610aad565b600081905561018890603290610aad565b600155610193610544565b61019b610689565b565b603281565b60066020526000908152604090205481565b601481565b6101c16106a1565b6101c96106a1565b6101d16106a1565b6101d96106a1565b60005b6003548110156102da576003818154811061020757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031683826005811061023c57634e487b7160e01b600052603260045260246000fd5b60200201906001600160a01b031690816001600160a01b031681525050600660006003838154811061027e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548282600581106102c357634e487b7160e01b600052603260045260246000fd5b6020020152806102d281610ac5565b9150506101dc565b5090925090509091565b60035490565b60005481565b600581565b60005443116103165760405162461bcd60e51b815260040161016390610884565b6001544311156103385760405162461bcd60e51b81526004016101639061091b565b3332146103575760405162461bcd60e51b8152600401610163906109a3565b6001600160a01b03811660009081526005602052604090205460ff1661038f5760405162461bcd60e51b815260040161016390610a56565b3360009081526004602052604090205460ff16156103bf5760405162461bcd60e51b815260040161016390610785565b336000908152600460209081526040808320805460ff191660019081179091556001600160a01b038516845260069092528220805491929091610403908490610aad565b9091555050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319163317905550565b60005443111561046f5760405162461bcd60e51b815260040161016390610827565b6003546005116104915760405162461bcd60e51b8152600401610163906109f9565b3332146104b05760405162461bcd60e51b8152600401610163906107bc565b3360009081526005602052604090205460ff16156104e05760405162461bcd60e51b815260040161016390610946565b336000818152600560205260408120805460ff191660019081179091556003805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169091179055565b60015481565b60005b60035481101561060b576000600560006003848154811061057857634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040018120805460ff191692151592909217909155600380546006918391859081106105d457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020558061060381610ac5565b915050610547565b5060005b600254811015610686576000600460006002848154811061064057634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061067e81610ac5565b91505061060f565b50565b610695600260006106bf565b61019b600360006106bf565b6040518060a001604052806005906020820280368337509192915050565b508054600082559060005260206000209081019061068691905b808211156106ed57600081556001016106d9565b5090565b600060208284031215610702578081fd5b81356001600160a01b0381168114610718578182fd5b9392505050565b6101408101818460005b60058110156107515781516001600160a01b0316835260209283019290910190600101610729565b50505060a082018360005b600581101561077b57815183526020928301929091019060010161075c565b5050509392505050565b60208082526017908201527f596f75206861766520616c726561647920766f7465642e000000000000000000604082015260600190565b60208082526045908201527f4f6e6c792065787465726e616c6c79206f776e6564206163636f756e7473206860408201527f617665207468652072696768742072656769737465722061732063616e64696460608201526430ba32b99760d91b608082015260a00190565b6020808252603c908201527f596f752063616e206e6f206c6f6e67657220726567697374657220617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b6020808252602e908201527f50617469656e63652c2074686520726567697374726174696f6e20706572696f60408201526d64206973206e6f74206f7665722160901b606082015260800190565b60208082526029908201527f50617469656e63652c207468652063757272656e7420766f74696e67206973206040820152683737ba1037bb32b91760b91b606082015260800190565b6020808252601190820152702a3432903b37ba329034b99037bb32b91760791b604082015260600190565b6020808252603c908201527f596f752061726520616c7265616479207265676973746572656420617320612060408201527f63616e64696461746520666f72207468697320656c656374696f6e2e00000000606082015260800190565b60208082526036908201527f4f6e6c792065787465726e616c6c79206f776e6564206163636f756e7473206860408201527530bb32903a3432903934b3b43a103a37903b37ba329760511b606082015260800190565b60208082526037908201527f4d6178696d756d206e756d626572206f662063616e646964617465732072656160408201527f6368656420666f72207468697320656c656374696f6e2e000000000000000000606082015260800190565b6020808252602e908201527f546869732061646472657373206973206e6f742072656769737465726564206160408201526d3990309031b0b73234b230ba329760911b606082015260800190565b90815260200190565b60008219821115610ac057610ac0610ae0565b500190565b6000600019821415610ad957610ad9610ae0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207756000bd6db03c042a6414dbd255f3c4d77786e84e47320902c02a38f02c90f64736f6c63430008000033",
  "deployedSourceMap": "58:3055:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:315;;;:::i;:::-;;197:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;480:57;;;;;;:::i;:::-;;:::i;133:58::-;;;:::i;2100:456::-;;;:::i;:::-;;;;;;;;:::i;2562:102::-;;;:::i;256:34::-;;;:::i;78:49::-;;;:::i;1475:619::-;;;;;;:::i;:::-;;:::i;865:604::-;;;:::i;296:28::-;;;:::i;544:315::-;612:9;;597:12;:24;589:78;;;;-1:-1:-1;;;589:78:0;;;;;;;:::i;:::-;;;;;;;;;696:44;189:2;696:12;:44;:::i;:::-;678:15;:62;;;762:41;;247:2;;762:41;:::i;:::-;750:9;:53;814:15;:13;:15::i;:::-;839:13;:11;:13::i;:::-;544:315::o;197:52::-;247:2;197:52;:::o;480:57::-;;;;;;;;;;;;;:::o;133:58::-;189:2;133:58;:::o;2100:456::-;2143:37;;:::i;:::-;2182;;:::i;:::-;2231:50;;:::i;:::-;2291:45;;:::i;:::-;2352:9;2347:164;2369:10;:17;2365:21;;2347:164;;;2424:10;2435:1;2424:13;;;;;;-1:-1:-1;;;2424:13:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2424:13:0;2407:11;2419:1;2407:14;;;;;-1:-1:-1;;;2407:14:0;;;;;;;;;;;;:30;-1:-1:-1;;;;;2407:30:0;;;-1:-1:-1;;;;;2407:30:0;;;;;2463:22;:37;2486:10;2497:1;2486:13;;;;;;-1:-1:-1;;;2486:13:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2486:13:0;2463:37;;;;;;;;;;;;;2451:6;2458:1;2451:9;;;;;-1:-1:-1;;;2451:9:0;;;;;;;;;;;;:49;2388:3;;;;:::i;:::-;;;;2347:164;;;-1:-1:-1;2529:11:0;;-1:-1:-1;2542:6:0;-1:-1:-1;2100:456:0;;:::o;2562:102::-;2640:10;:17;2562:102;:::o;256:34::-;;;;:::o;78:49::-;126:1;78:49;:::o;1475:619::-;1548:15;;1533:12;:30;1525:89;;;;-1:-1:-1;;;1525:89:0;;;;;;;:::i;:::-;1649:9;;1633:12;:25;;1625:55;;;;-1:-1:-1;;;1625:55:0;;;;;;;:::i;:::-;1699:10;1713:9;1699:23;1691:90;;;;-1:-1:-1;;;1691:90:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1799:32:0;;;;;;:21;:32;;;;;;;;1791:91;;;;-1:-1:-1;;;1791:91:0;;;;;;;:::i;:::-;1920:10;1902:29;;;;:17;:29;;;;;;;;1901:30;1893:66;;;;-1:-1:-1;;;1893:66:0;;;;;;;:::i;:::-;1988:10;1970:29;;;;:17;:29;;;;;;;;:36;;-1:-1:-1;;1970:36:0;2002:4;1970:36;;;;;;-1:-1:-1;;;;;2016:33:0;;;;:22;:33;;;;;:38;;2002:4;;2016:33;;:38;;2002:4;;2016:38;:::i;:::-;;;;-1:-1:-1;;2064:6:0;:23;;;;;;;-1:-1:-1;2064:23:0;;;;;;;;-1:-1:-1;;;;;;2064:23:0;2076:10;2064:23;;;-1:-1:-1;1475:619:0:o;865:604::-;935:15;;919:12;:31;;911:104;;;;-1:-1:-1;;;911:104:0;;;;;;;:::i;:::-;1033:10;:17;126:1;-1:-1:-1;1025:109:0;;;;-1:-1:-1;;;1025:109:0;;;;;;;:::i;:::-;1152:10;1166:9;1152:23;1144:105;;;;-1:-1:-1;;;1144:105:0;;;;;;;:::i;:::-;1290:10;1268:33;;;;:21;:33;;;;;;;;1267:34;1259:107;;;;-1:-1:-1;;;1259:107:0;;;;;;;:::i;:::-;1407:10;1385:33;;;;:21;:33;;;;;:40;;-1:-1:-1;;1385:40:0;1421:4;1385:40;;;;;;1435:10;:27;;;;;;;;;;;;;;-1:-1:-1;;;;;;1435:27:0;;;;;;865:604::o;296:28::-;;;;:::o;2670:345::-;2719:9;2714:170;2736:10;:17;2732:21;;2714:170;;;2813:5;2774:21;:36;2796:10;2807:1;2796:13;;;;;;-1:-1:-1;;;2796:13:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2796:13:0;2774:36;;;;;;;;;;;;:44;;-1:-1:-1;;2774:44:0;;;;;;;;;;;2855:10;:13;;2832:22;;2796:13;;2866:1;;2855:13;;;;-1:-1:-1;;;2855:13:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:13:0;2832:37;;;;;;;;;;;;:41;2755:3;;;;:::i;:::-;;;;2714:170;;;;2911:9;2906:103;2928:6;:13;2924:17;;2906:103;;;2993:5;2962:17;:28;2980:6;2987:1;2980:9;;;;;;-1:-1:-1;;;2980:9:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2980:9:0;2962:28;;;;;;;;;;;;:36;;-1:-1:-1;;2962:36:0;;;;;;;;;;2943:3;;;;:::i;:::-;;;;2906:103;;;;2670:345::o;3021:89::-;3063:13;3070:6;;3063:13;:::i;:::-;3086:17;3093:10;;3086:17;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:306:1:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o;325:932::-;579:3;564:19;;568:9;660:6;325:932;694:220;708:4;705:1;702:11;694:220;;;771:13;;-1:-1:-1;;;;;767:39:1;755:52;;830:4;854:12;;;;889:15;;;;803:1;721:9;694:220;;;698:3;;;951;940:9;936:19;1003:6;1029:1;1039:212;1055:4;1050:3;1047:13;1039:212;;;1120:15;;1106:30;;1159:4;1185:14;;;;1224:17;;;;1079:1;1070:11;1039:212;;;1043:3;;;546:711;;;;;:::o;1262:347::-;1464:2;1446:21;;;1503:2;1483:18;;;1476:30;1542:25;1537:2;1522:18;;1515:53;1600:2;1585:18;;1436:173::o;1614:473::-;1816:2;1798:21;;;1855:2;1835:18;;;1828:30;1894:34;1889:2;1874:18;;1867:62;1965:34;1960:2;1945:18;;1938:62;-1:-1:-1;;;2031:3:1;2016:19;;2009:36;2077:3;2062:19;;1788:299::o;2092:424::-;2294:2;2276:21;;;2333:2;2313:18;;;2306:30;2372:34;2367:2;2352:18;;2345:62;2443:30;2438:2;2423:18;;2416:58;2506:3;2491:19;;2266:250::o;2521:410::-;2723:2;2705:21;;;2762:2;2742:18;;;2735:30;2801:34;2796:2;2781:18;;2774:62;-1:-1:-1;;;2867:2:1;2852:18;;2845:44;2921:3;2906:19;;2695:236::o;2936:405::-;3138:2;3120:21;;;3177:2;3157:18;;;3150:30;3216:34;3211:2;3196:18;;3189:62;-1:-1:-1;;;3282:2:1;3267:18;;3260:39;3331:3;3316:19;;3110:231::o;3346:341::-;3548:2;3530:21;;;3587:2;3567:18;;;3560:30;-1:-1:-1;;;3621:2:1;3606:18;;3599:47;3678:2;3663:18;;3520:167::o;3692:424::-;3894:2;3876:21;;;3933:2;3913:18;;;3906:30;3972:34;3967:2;3952:18;;3945:62;4043:30;4038:2;4023:18;;4016:58;4106:3;4091:19;;3866:250::o;4121:418::-;4323:2;4305:21;;;4362:2;4342:18;;;4335:30;4401:34;4396:2;4381:18;;4374:62;-1:-1:-1;;;4467:2:1;4452:18;;4445:52;4529:3;4514:19;;4295:244::o;4544:419::-;4746:2;4728:21;;;4785:2;4765:18;;;4758:30;4824:34;4819:2;4804:18;;4797:62;4895:25;4890:2;4875:18;;4868:53;4953:3;4938:19;;4718:245::o;4968:410::-;5170:2;5152:21;;;5209:2;5189:18;;;5182:30;5248:34;5243:2;5228:18;;5221:62;-1:-1:-1;;;5314:2:1;5299:18;;5292:44;5368:3;5353:19;;5142:236::o;5383:177::-;5529:25;;;5517:2;5502:18;;5484:76::o;5565:128::-;;5636:1;5632:6;5629:1;5626:13;5623:2;;;5642:18;;:::i;:::-;-1:-1:-1;5678:9:1;;5613:80::o;5698:135::-;;-1:-1:-1;;5758:17:1;;5755:2;;;5778:18;;:::i;:::-;-1:-1:-1;5825:1:1;5814:13;;5745:88::o;5838:127::-;5899:10;5894:3;5890:20;5887:1;5880:31;5930:4;5927:1;5920:15;5954:4;5951:1;5944:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    3113
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x493F584C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x493F584C EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4A8A62AB EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x58CB805B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x82E5DAE5 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xC3403DDF EQ PUSH2 0x13A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xFF9E259 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1C599396 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x39DF9932 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x3BDAC454 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4717F97C EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0x71F JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x44D JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x16C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x14 NUMBER PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH2 0x188 SWAP1 PUSH1 0x32 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x193 PUSH2 0x544 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x689 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x207 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0x23C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x27E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0x2C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD MSTORE DUP1 PUSH2 0x2D2 DUP2 PUSH2 0xAC5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DC JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD NUMBER GT PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER GT ISZERO PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x91B JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0xA56 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x785 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x403 SWAP1 DUP5 SWAP1 PUSH2 0xAAD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD NUMBER GT ISZERO PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x5 GT PUSH2 0x491 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x7BC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163 SWAP1 PUSH2 0x946 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x60B JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x578 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x6 SWAP2 DUP4 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x5D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x603 DUP2 PUSH2 0xAC5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x547 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x640 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x67E DUP2 PUSH2 0xAC5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x60F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x695 PUSH1 0x2 PUSH1 0x0 PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x19B PUSH1 0x3 PUSH1 0x0 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x6D9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x702 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x140 DUP2 ADD DUP2 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x751 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x729 JUMP JUMPDEST POP POP POP PUSH1 0xA0 DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x77B JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x75C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920766F7465642E000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x45 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792065787465726E616C6C79206F776E6564206163636F756E74732068 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x617665207468652072696768742072656769737465722061732063616E646964 PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x30BA32B997 PUSH1 0xD9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F206C6F6E676572207265676973746572206173206120 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x50617469656E63652C2074686520726567697374726174696F6E20706572696F PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x64206973206E6F74206F76657221 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x50617469656E63652C207468652063757272656E7420766F74696E6720697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3737BA1037BB32B917 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x2A3432903B37BA329034B99037BB32B917 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C72656164792072656769737465726564206173206120 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792065787465726E616C6C79206F776E6564206163636F756E74732068 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x30BB32903A3432903934B3B43A103A37903B37BA3297 PUSH1 0x51 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206E756D626572206F662063616E6469646174657320726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6368656420666F72207468697320656C656374696F6E2E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732061646472657373206973206E6F7420726567697374657265642061 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x3990309031B0B73234B230BA3297 PUSH1 0x91 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xAC0 PUSH2 0xAE0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD9 PUSH2 0xAE0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x56000BD6DB03C042A6414DBD255F3C4D77786E84E4732090 0x2C MUL LOG3 DUP16 MUL 0xC9 0xF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x493F584C"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x493F584C"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4A8A62AB"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x58CB805B"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6DD7D8EA"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x82E5DAE5"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "97": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC3403DDF"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "108": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFF9E259"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1C599396"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39DF9932"
    },
    "142": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "146": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BDAC454"
    },
    "153": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "157": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4717F97C"
    },
    "164": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1"
    },
    "168": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        3113
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "fn": "Vote.initiateElection",
      "offset": [
        544,
        859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "Vote.initiateElection",
      "offset": [
        544,
        859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "178": {
      "fn": "Vote.initiateElection",
      "offset": [
        544,
        859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "181": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        544,
        859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "Vote.initiateElection",
      "offset": [
        544,
        859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Vote.initiateElection",
      "offset": [
        544,
        859
      ],
      "op": "STOP",
      "path": "0"
    },
    "184": {
      "offset": [
        197,
        249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "188": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "191": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        197,
        249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "196": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "199": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "200": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "201": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA4"
    },
    "204": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        197,
        249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "211": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "SUB",
      "path": "0"
    },
    "212": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "213": {
      "fn": "Vote.initiateElection",
      "offset": [
        197,
        249
      ],
      "op": "RETURN",
      "path": "0"
    },
    "214": {
      "offset": [
        480,
        537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "218": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4"
    },
    "221": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "222": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "224": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F1"
    },
    "227": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        480,
        537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "228": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "229": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "232": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        480,
        537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "233": {
      "offset": [
        133,
        191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": "Vote.initiateElection",
      "offset": [
        133,
        191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "237": {
      "fn": "Vote.initiateElection",
      "offset": [
        133,
        191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "240": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        133,
        191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "241": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "242": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "245": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "248": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2100,
        2556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "249": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "252": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "253": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "256": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "257": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "258": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "259": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71F"
    },
    "262": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2100,
        2556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "263": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2562,
        2664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "264": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2562,
        2664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "267": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2562,
        2664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E4"
    },
    "270": {
      "fn": "Vote.getNumberCandidates",
      "jump": "i",
      "offset": [
        2562,
        2664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "271": {
      "offset": [
        256,
        290
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        256,
        290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "275": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        256,
        290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA"
    },
    "278": {
      "fn": "Vote.getNumberCandidates",
      "jump": "i",
      "offset": [
        256,
        290
      ],
      "op": "JUMP",
      "path": "0"
    },
    "279": {
      "offset": [
        78,
        127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        78,
        127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "283": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        78,
        127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F0"
    },
    "286": {
      "fn": "Vote.getNumberCandidates",
      "jump": "i",
      "offset": [
        78,
        127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "291": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "294": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "295": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "297": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F1"
    },
    "300": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1475,
        2094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F5"
    },
    "305": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1475,
        2094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        865,
        1469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        865,
        1469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "310": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        865,
        1469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "313": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        865,
        1469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "314": {
      "offset": [
        296,
        324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "315": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        296,
        324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "318": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        296,
        324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53E"
    },
    "321": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        296,
        324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "322": {
      "fn": "Vote.initiateElection",
      "offset": [
        544,
        859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "323": {
      "fn": "Vote.initiateElection",
      "offset": [
        612,
        621
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "325": {
      "fn": "Vote.initiateElection",
      "offset": [
        612,
        621
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "326": {
      "fn": "Vote.initiateElection",
      "offset": [
        597,
        609
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "327": {
      "branch": 31,
      "fn": "Vote.initiateElection",
      "offset": [
        597,
        621
      ],
      "op": "GT",
      "path": "0"
    },
    "328": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "331": {
      "branch": 31,
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "332": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "334": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "341": {
      "op": "SHL"
    },
    "342": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "DUP2",
      "path": "0"
    },
    "343": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "344": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "346": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "ADD",
      "path": "0"
    },
    "347": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "350": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "351": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D2"
    },
    "354": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        589,
        667
      ],
      "op": "JUMP",
      "path": "0"
    },
    "355": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "356": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "358": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "359": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "DUP1",
      "path": "0"
    },
    "360": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "361": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "SUB",
      "path": "0"
    },
    "362": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "363": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "364": {
      "fn": "Vote.initiateElection",
      "offset": [
        589,
        667
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "fn": "Vote.initiateElection",
      "offset": [
        696,
        740
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x177"
    },
    "368": {
      "offset": [
        189,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "370": {
      "fn": "Vote.initiateElection",
      "offset": [
        696,
        708
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "371": {
      "fn": "Vote.initiateElection",
      "offset": [
        696,
        740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "374": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        696,
        740
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "Vote.initiateElection",
      "offset": [
        696,
        740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "Vote.initiateElection",
      "offset": [
        678,
        693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "378": {
      "fn": "Vote.initiateElection",
      "offset": [
        678,
        740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "379": {
      "fn": "Vote.initiateElection",
      "offset": [
        678,
        740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "380": {
      "fn": "Vote.initiateElection",
      "offset": [
        678,
        740
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "381": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        803
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x188"
    },
    "384": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "385": {
      "offset": [
        247,
        249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "387": {
      "fn": "Vote.initiateElection",
      "offset": [
        247,
        249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "388": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "391": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        762,
        803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "fn": "Vote.initiateElection",
      "offset": [
        762,
        803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "Vote.initiateElection",
      "offset": [
        750,
        759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "395": {
      "fn": "Vote.initiateElection",
      "offset": [
        750,
        803
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "396": {
      "fn": "Vote.initiateElection",
      "offset": [
        814,
        829
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x193"
    },
    "399": {
      "fn": "Vote.initiateElection",
      "offset": [
        814,
        827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x544"
    },
    "402": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        814,
        829
      ],
      "op": "JUMP",
      "path": "0"
    },
    "403": {
      "fn": "Vote.initiateElection",
      "offset": [
        814,
        829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "404": {
      "fn": "Vote.initiateElection",
      "offset": [
        839,
        852
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x19B"
    },
    "407": {
      "fn": "Vote.initiateElection",
      "offset": [
        839,
        850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x689"
    },
    "410": {
      "fn": "Vote.initiateElection",
      "jump": "i",
      "offset": [
        839,
        852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "411": {
      "fn": "Vote.initiateElection",
      "offset": [
        839,
        852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "412": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        544,
        859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "413": {
      "offset": [
        197,
        249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "offset": [
        247,
        249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "416": {
      "offset": [
        197,
        249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "417": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        197,
        249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "offset": [
        480,
        537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "421": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "423": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "424": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "427": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "428": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "429": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "431": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "432": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "433": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "434": {
      "fn": "Vote.initiateElection",
      "offset": [
        480,
        537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "435": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        480,
        537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "offset": [
        133,
        191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "437": {
      "offset": [
        189,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "439": {
      "offset": [
        133,
        191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "440": {
      "fn": "Vote.initiateElection",
      "jump": "o",
      "offset": [
        133,
        191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "Vote.getResults",
      "offset": [
        2143,
        2180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "445": {
      "fn": "Vote.getResults",
      "offset": [
        2143,
        2180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "448": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2143,
        2180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "449": {
      "fn": "Vote.getResults",
      "offset": [
        2143,
        2180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "Vote.getResults",
      "offset": [
        2182,
        2219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9"
    },
    "453": {
      "fn": "Vote.getResults",
      "offset": [
        2182,
        2219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "456": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2182,
        2219
      ],
      "op": "JUMP",
      "path": "0"
    },
    "457": {
      "fn": "Vote.getResults",
      "offset": [
        2182,
        2219
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "458": {
      "fn": "Vote.getResults",
      "offset": [
        2231,
        2281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "461": {
      "fn": "Vote.getResults",
      "offset": [
        2231,
        2281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "464": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2231,
        2281
      ],
      "op": "JUMP",
      "path": "0"
    },
    "465": {
      "fn": "Vote.getResults",
      "offset": [
        2231,
        2281
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "Vote.getResults",
      "offset": [
        2291,
        2336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "469": {
      "fn": "Vote.getResults",
      "offset": [
        2291,
        2336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "472": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2291,
        2336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "Vote.getResults",
      "offset": [
        2291,
        2336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "Vote.getResults",
      "offset": [
        2352,
        2361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "476": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "Vote.getResults",
      "offset": [
        2369,
        2379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "479": {
      "fn": "Vote.getResults",
      "offset": [
        2369,
        2386
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "480": {
      "fn": "Vote.getResults",
      "offset": [
        2365,
        2386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "Vote.getResults",
      "offset": [
        2365,
        2386
      ],
      "op": "LT",
      "path": "0"
    },
    "482": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "483": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "486": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "487": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x3"
    },
    "489": {
      "fn": "Vote.getResults",
      "offset": [
        2435,
        2436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "490": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "491": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "492": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "493": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "LT",
      "path": "0"
    },
    "494": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207"
    },
    "497": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "498": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "505": {
      "op": "SHL"
    },
    "506": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "508": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "509": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "511": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "513": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "514": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "516": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "518": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "REVERT",
      "path": "0"
    },
    "519": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "522": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "523": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "DUP3",
      "path": "0"
    },
    "524": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "525": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "527": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "528": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "529": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "530": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "ADD",
      "path": "0"
    },
    "531": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "op": "SUB"
    },
    "540": {
      "fn": "Vote.getResults",
      "offset": [
        2424,
        2437
      ],
      "op": "AND",
      "path": "0"
    },
    "541": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2418
      ],
      "op": "DUP4",
      "path": "0"
    },
    "542": {
      "fn": "Vote.getResults",
      "offset": [
        2419,
        2420
      ],
      "op": "DUP3",
      "path": "0"
    },
    "543": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "545": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "546": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "LT",
      "path": "0"
    },
    "547": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C"
    },
    "550": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "561": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "562": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "564": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "566": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "567": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "569": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "571": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "REVERT",
      "path": "0"
    },
    "572": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "573": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "575": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "MUL",
      "path": "0"
    },
    "576": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2421
      ],
      "op": "ADD",
      "path": "0"
    },
    "577": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "584": {
      "op": "SHL"
    },
    "585": {
      "op": "SUB"
    },
    "586": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "AND",
      "path": "0"
    },
    "587": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "588": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "AND",
      "path": "0"
    },
    "598": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "599": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "600": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "POP",
      "path": "0"
    },
    "601": {
      "fn": "Vote.getResults",
      "offset": [
        2407,
        2437
      ],
      "op": "POP",
      "path": "0"
    },
    "602": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2485
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x6"
    },
    "604": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "606": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "608": {
      "fn": "Vote.getResults",
      "offset": [
        2497,
        2498
      ],
      "op": "DUP4",
      "path": "0"
    },
    "609": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "610": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "611": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "612": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "LT",
      "path": "0"
    },
    "613": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "616": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "617": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "627": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "628": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "630": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "632": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "635": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "637": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "REVERT",
      "path": "0"
    },
    "638": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "639": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "641": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "642": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "DUP3",
      "path": "0"
    },
    "643": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "644": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "646": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "647": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "DUP4",
      "path": "0"
    },
    "648": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "649": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "650": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "651": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "652": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "op": "SUB"
    },
    "661": {
      "fn": "Vote.getResults",
      "offset": [
        2486,
        2499
      ],
      "op": "AND",
      "path": "0"
    },
    "662": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "DUP4",
      "path": "0"
    },
    "663": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "664": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "DUP3",
      "path": "0"
    },
    "665": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "ADD",
      "path": "0"
    },
    "666": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "667": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "669": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "670": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "672": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "ADD",
      "path": "0"
    },
    "673": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "674": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "675": {
      "fn": "Vote.getResults",
      "offset": [
        2463,
        2500
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "676": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2457
      ],
      "op": "DUP3",
      "path": "0"
    },
    "677": {
      "fn": "Vote.getResults",
      "offset": [
        2458,
        2459
      ],
      "op": "DUP3",
      "path": "0"
    },
    "678": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "680": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "681": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "LT",
      "path": "0"
    },
    "682": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3"
    },
    "685": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "686": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "696": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "697": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "699": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "701": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "702": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "704": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "706": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "REVERT",
      "path": "0"
    },
    "707": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "708": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "710": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "MUL",
      "path": "0"
    },
    "711": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2460
      ],
      "op": "ADD",
      "path": "0"
    },
    "712": {
      "fn": "Vote.getResults",
      "offset": [
        2451,
        2500
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "713": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "714": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2"
    },
    "717": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "DUP2",
      "path": "0"
    },
    "718": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "721": {
      "fn": "Vote.getResults",
      "jump": "i",
      "offset": [
        2388,
        2391
      ],
      "op": "JUMP",
      "path": "0"
    },
    "722": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "723": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "724": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "POP",
      "path": "0"
    },
    "725": {
      "fn": "Vote.getResults",
      "offset": [
        2388,
        2391
      ],
      "op": "POP",
      "path": "0"
    },
    "726": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "729": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "730": {
      "fn": "Vote.getResults",
      "offset": [
        2347,
        2511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "731": {
      "op": "POP"
    },
    "732": {
      "fn": "Vote.getResults",
      "offset": [
        2529,
        2540
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 8
    },
    "733": {
      "fn": "Vote.getResults",
      "offset": [
        2529,
        2540
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "fn": "Vote.getResults",
      "offset": [
        2542,
        2548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "Vote.getResults",
      "offset": [
        2100,
        2556
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "739": {
      "fn": "Vote.getResults",
      "jump": "o",
      "offset": [
        2100,
        2556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "740": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2562,
        2664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "741": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2640,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x3"
    },
    "743": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2640,
        2657
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "744": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        2562,
        2664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "Vote.getNumberCandidates",
      "jump": "o",
      "offset": [
        2562,
        2664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "746": {
      "offset": [
        256,
        290
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "747": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        256,
        290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "749": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        256,
        290
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "750": {
      "fn": "Vote.getNumberCandidates",
      "offset": [
        256,
        290
      ],
      "op": "DUP2",
      "path": "0"
    },
    "751": {
      "fn": "Vote.getNumberCandidates",
      "jump": "o",
      "offset": [
        256,
        290
      ],
      "op": "JUMP",
      "path": "0"
    },
    "752": {
      "offset": [
        78,
        127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "753": {
      "offset": [
        126,
        127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "755": {
      "offset": [
        78,
        127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "756": {
      "fn": "Vote.getNumberCandidates",
      "jump": "o",
      "offset": [
        78,
        127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "757": {
      "fn": "Vote.vote",
      "offset": [
        1475,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "758": {
      "fn": "Vote.vote",
      "offset": [
        1548,
        1563
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "760": {
      "fn": "Vote.vote",
      "offset": [
        1548,
        1563
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "761": {
      "fn": "Vote.vote",
      "offset": [
        1533,
        1545
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "762": {
      "branch": 32,
      "fn": "Vote.vote",
      "offset": [
        1533,
        1563
      ],
      "op": "GT",
      "path": "0"
    },
    "763": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x316"
    },
    "766": {
      "branch": 32,
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "767": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "769": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "776": {
      "op": "SHL"
    },
    "777": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "DUP2",
      "path": "0"
    },
    "778": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "779": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "781": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "ADD",
      "path": "0"
    },
    "782": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "785": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "786": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x884"
    },
    "789": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1525,
        1614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "790": {
      "fn": "Vote.vote",
      "offset": [
        1525,
        1614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "791": {
      "fn": "Vote.vote",
      "offset": [
        1649,
        1658
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "793": {
      "fn": "Vote.vote",
      "offset": [
        1649,
        1658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "794": {
      "fn": "Vote.vote",
      "offset": [
        1633,
        1645
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "795": {
      "fn": "Vote.vote",
      "offset": [
        1633,
        1658
      ],
      "op": "GT",
      "path": "0"
    },
    "796": {
      "branch": 33,
      "fn": "Vote.vote",
      "offset": [
        1633,
        1658
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "797": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "800": {
      "branch": 33,
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "801": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "803": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "812": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "813": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "815": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "ADD",
      "path": "0"
    },
    "816": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "819": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "820": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91B"
    },
    "823": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1625,
        1680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "824": {
      "fn": "Vote.vote",
      "offset": [
        1625,
        1680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "825": {
      "fn": "Vote.vote",
      "offset": [
        1699,
        1709
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 12
    },
    "826": {
      "fn": "Vote.vote",
      "offset": [
        1713,
        1722
      ],
      "op": "ORIGIN",
      "path": "0"
    },
    "827": {
      "branch": 34,
      "fn": "Vote.vote",
      "offset": [
        1699,
        1722
      ],
      "op": "EQ",
      "path": "0"
    },
    "828": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x357"
    },
    "831": {
      "branch": 34,
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "832": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "834": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "DUP2",
      "path": "0"
    },
    "843": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "844": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "846": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "ADD",
      "path": "0"
    },
    "847": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "850": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "851": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A3"
    },
    "854": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1691,
        1781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "855": {
      "fn": "Vote.vote",
      "offset": [
        1691,
        1781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "op": "SUB"
    },
    "864": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "865": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "AND",
      "path": "0"
    },
    "866": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "868": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "870": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "871": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "873": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "875": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "876": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "878": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "880": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "881": {
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "883": {
      "branch": 35,
      "fn": "Vote.vote",
      "offset": [
        1799,
        1831
      ],
      "op": "AND",
      "path": "0"
    },
    "884": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38F"
    },
    "887": {
      "branch": 35,
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "888": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "890": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "DUP2",
      "path": "0"
    },
    "899": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "900": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "902": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "ADD",
      "path": "0"
    },
    "903": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "906": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "907": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA56"
    },
    "910": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1791,
        1882
      ],
      "op": "JUMP",
      "path": "0"
    },
    "911": {
      "fn": "Vote.vote",
      "offset": [
        1791,
        1882
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "912": {
      "fn": "Vote.vote",
      "offset": [
        1920,
        1930
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "913": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "915": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "916": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "917": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "918": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "920": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "922": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "923": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "925": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "926": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "927": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "928": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "930": {
      "fn": "Vote.vote",
      "offset": [
        1902,
        1931
      ],
      "op": "AND",
      "path": "0"
    },
    "931": {
      "branch": 36,
      "fn": "Vote.vote",
      "offset": [
        1901,
        1931
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "932": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BF"
    },
    "935": {
      "branch": 36,
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "936": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "938": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "947": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "948": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "950": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "ADD",
      "path": "0"
    },
    "951": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "954": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "958": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        1893,
        1959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "959": {
      "fn": "Vote.vote",
      "offset": [
        1893,
        1959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "960": {
      "fn": "Vote.vote",
      "offset": [
        1988,
        1998
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 15
    },
    "961": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "963": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "964": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "965": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "966": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "968": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "970": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "971": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "972": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "973": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "975": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "DUP1",
      "path": "0"
    },
    "976": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "DUP4",
      "path": "0"
    },
    "977": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        1999
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "978": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "979": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "982": {
      "op": "NOT"
    },
    "983": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "fn": "Vote.vote",
      "offset": [
        2002,
        2006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "986": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "988": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "OR",
      "path": "0"
    },
    "989": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "990": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "991": {
      "fn": "Vote.vote",
      "offset": [
        1970,
        2006
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 16
    },
    "1001": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "AND",
      "path": "0"
    },
    "1002": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1003": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1004": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1006": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1008": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1009": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1010": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1011": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1012": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1013": {
      "fn": "Vote.vote",
      "offset": [
        2002,
        2006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1014": {
      "fn": "Vote.vote",
      "offset": [
        2002,
        2006
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1015": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1016": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2049
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1017": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x403"
    },
    "1020": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1021": {
      "fn": "Vote.vote",
      "offset": [
        2002,
        2006
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1022": {
      "fn": "Vote.vote",
      "offset": [
        2002,
        2006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1023": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "1026": {
      "fn": "Vote.vote",
      "jump": "i",
      "offset": [
        2016,
        2054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1027": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1028": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1029": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1030": {
      "fn": "Vote.vote",
      "offset": [
        2016,
        2054
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x2"
    },
    "1035": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1036": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1037": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1039": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1040": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "ADD",
      "path": "0"
    },
    "1041": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1042": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1045": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1046": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1047": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1048": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1049": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1082": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "ADD",
      "path": "0"
    },
    "1083": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1084": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "op": "NOT"
    },
    "1094": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "AND",
      "path": "0"
    },
    "1095": {
      "fn": "Vote.vote",
      "offset": [
        2076,
        2086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1096": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "OR",
      "path": "0"
    },
    "1097": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1098": {
      "fn": "Vote.vote",
      "offset": [
        2064,
        2087
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "Vote.vote",
      "jump": "o",
      "offset": [
        1475,
        2094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1101": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        865,
        1469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1102": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        935,
        950
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "1104": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        935,
        950
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1105": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        919,
        931
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "1106": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        919,
        950
      ],
      "op": "GT",
      "path": "0"
    },
    "1107": {
      "branch": 37,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        919,
        950
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1108": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "1111": {
      "branch": 37,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1112": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1114": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1123": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1124": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1126": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "ADD",
      "path": "0"
    },
    "1127": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "1130": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1131": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x827"
    },
    "1134": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        911,
        1015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1135": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        911,
        1015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1136": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1033,
        1043
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x3"
    },
    "1138": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1033,
        1050
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1139": {
      "offset": [
        126,
        127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1141": {
      "op": "GT"
    },
    "1142": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x491"
    },
    "1145": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1146": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1148": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1149": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1157": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1158": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1160": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "ADD",
      "path": "0"
    },
    "1161": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "1164": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1165": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F9"
    },
    "1168": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        1025,
        1134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1169": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1025,
        1134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1170": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1152,
        1162
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "1171": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1166,
        1175
      ],
      "op": "ORIGIN",
      "path": "0"
    },
    "1172": {
      "branch": 38,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1152,
        1175
      ],
      "op": "EQ",
      "path": "0"
    },
    "1173": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B0"
    },
    "1176": {
      "branch": 38,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1177": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1179": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1180": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1186": {
      "op": "SHL"
    },
    "1187": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1188": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1189": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1191": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "ADD",
      "path": "0"
    },
    "1192": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "1195": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BC"
    },
    "1199": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        1144,
        1249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1200": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1144,
        1249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1201": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1290,
        1300
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 21
    },
    "1202": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1204": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1205": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1206": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1207": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1209": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1211": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1212": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1214": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1215": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1216": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1217": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1219": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1268,
        1301
      ],
      "op": "AND",
      "path": "0"
    },
    "1220": {
      "branch": 39,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1267,
        1301
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1221": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E0"
    },
    "1224": {
      "branch": 39,
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1225": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1227": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1236": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1237": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1239": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "ADD",
      "path": "0"
    },
    "1240": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "1243": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1244": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x946"
    },
    "1247": {
      "fn": "Vote.signupAsCandidate",
      "jump": "i",
      "offset": [
        1259,
        1366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1248": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1259,
        1366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1249": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1407,
        1417
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 22
    },
    "1250": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1252": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1253": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1254": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1255": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1257": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1259": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1260": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1262": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1263": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1418
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1264": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1265": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1268": {
      "op": "NOT"
    },
    "1269": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "AND",
      "path": "0"
    },
    "1270": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1421,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1272": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1274": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "OR",
      "path": "0"
    },
    "1275": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1276": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1277": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1385,
        1425
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1278": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x3"
    },
    "1280": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1281": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1282": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1283": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1284": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "ADD",
      "path": "0"
    },
    "1285": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1286": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1287": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1288": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1289": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1290": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1323": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "ADD",
      "path": "0"
    },
    "1324": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1325": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "op": "SUB"
    },
    "1334": {
      "op": "NOT"
    },
    "1335": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "AND",
      "path": "0"
    },
    "1336": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1337": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1338": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "OR",
      "path": "0"
    },
    "1339": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1340": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        1435,
        1462
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1341": {
      "fn": "Vote.signupAsCandidate",
      "jump": "o",
      "offset": [
        865,
        1469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1342": {
      "offset": [
        296,
        324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1343": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        296,
        324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1345": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        296,
        324
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1346": {
      "fn": "Vote.signupAsCandidate",
      "offset": [
        296,
        324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1347": {
      "fn": "Vote.signupAsCandidate",
      "jump": "o",
      "offset": [
        296,
        324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1348": {
      "fn": "Vote.resetMappings",
      "offset": [
        2670,
        3015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1349": {
      "fn": "Vote.resetMappings",
      "offset": [
        2719,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1351": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1352": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1354": {
      "fn": "Vote.resetMappings",
      "offset": [
        2736,
        2753
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1355": {
      "fn": "Vote.resetMappings",
      "offset": [
        2732,
        2753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1356": {
      "fn": "Vote.resetMappings",
      "offset": [
        2732,
        2753
      ],
      "op": "LT",
      "path": "0"
    },
    "1357": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1358": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60B"
    },
    "1361": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1362": {
      "fn": "Vote.resetMappings",
      "offset": [
        2813,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "1364": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1366": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1368": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1370": {
      "fn": "Vote.resetMappings",
      "offset": [
        2807,
        2808
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1371": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1372": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1373": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1374": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "LT",
      "path": "0"
    },
    "1375": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1378": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1379": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1389": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1390": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "1392": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1394": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1395": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1397": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1399": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1400": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1403": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1404": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1405": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1406": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1408": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1409": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1410": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1411": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1412": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1413": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1414": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "ADD",
      "path": "0"
    },
    "1415": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "SUB"
    },
    "1424": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "AND",
      "path": "0"
    },
    "1425": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1426": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1427": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1428": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "ADD",
      "path": "0"
    },
    "1429": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1430": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1431": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1432": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1433": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1435": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "ADD",
      "path": "0"
    },
    "1436": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1437": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2810
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1438": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1439": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1442": {
      "op": "NOT"
    },
    "1443": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "AND",
      "path": "0"
    },
    "1444": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1445": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1446": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1447": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1448": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1449": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1450": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "OR",
      "path": "0"
    },
    "1451": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1452": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1453": {
      "fn": "Vote.resetMappings",
      "offset": [
        2774,
        2818
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1454": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2865
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x3"
    },
    "1456": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1457": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1458": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1460": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1461": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1462": {
      "fn": "Vote.resetMappings",
      "offset": [
        2796,
        2809
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1463": {
      "fn": "Vote.resetMappings",
      "offset": [
        2866,
        2867
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1464": {
      "fn": "Vote.resetMappings",
      "offset": [
        2866,
        2867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1465": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1466": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "LT",
      "path": "0"
    },
    "1467": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "1470": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1471": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1481": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1482": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "1484": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1486": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1487": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1489": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1491": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1492": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1493": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1495": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1496": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1497": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1498": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1500": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1501": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1502": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1503": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1504": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1505": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "ADD",
      "path": "0"
    },
    "1506": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "op": "SUB"
    },
    "1515": {
      "fn": "Vote.resetMappings",
      "offset": [
        2855,
        2868
      ],
      "op": "AND",
      "path": "0"
    },
    "1516": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1517": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1518": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1519": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "ADD",
      "path": "0"
    },
    "1520": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1521": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1522": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1523": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1524": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1526": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "ADD",
      "path": "0"
    },
    "1527": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1528": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2869
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1529": {
      "fn": "Vote.resetMappings",
      "offset": [
        2832,
        2873
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1530": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 26
    },
    "1531": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "1534": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1535": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "1538": {
      "fn": "Vote.resetMappings",
      "jump": "i",
      "offset": [
        2755,
        2758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1540": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1541": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "POP",
      "path": "0"
    },
    "1542": {
      "fn": "Vote.resetMappings",
      "offset": [
        2755,
        2758
      ],
      "op": "POP",
      "path": "0"
    },
    "1543": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "1546": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1547": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1548": {
      "fn": "Vote.resetMappings",
      "offset": [
        2714,
        2884
      ],
      "op": "POP",
      "path": "0"
    },
    "1549": {
      "fn": "Vote.resetMappings",
      "offset": [
        2911,
        2920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1551": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1552": {
      "fn": "Vote.resetMappings",
      "offset": [
        2928,
        2934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1554": {
      "fn": "Vote.resetMappings",
      "offset": [
        2928,
        2941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1555": {
      "fn": "Vote.resetMappings",
      "offset": [
        2924,
        2941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1556": {
      "fn": "Vote.resetMappings",
      "offset": [
        2924,
        2941
      ],
      "op": "LT",
      "path": "0"
    },
    "1557": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1558": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x686"
    },
    "1561": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1562": {
      "fn": "Vote.resetMappings",
      "offset": [
        2993,
        2998
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x0"
    },
    "1564": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1566": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1568": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1570": {
      "fn": "Vote.resetMappings",
      "offset": [
        2987,
        2988
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1571": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1572": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1573": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1574": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "LT",
      "path": "0"
    },
    "1575": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x640"
    },
    "1578": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1579": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1589": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1590": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "1592": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1594": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1595": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1597": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1599": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1600": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1601": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1603": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1604": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1605": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1606": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1608": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1609": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1610": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1611": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1612": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1613": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1614": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "ADD",
      "path": "0"
    },
    "1615": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "SUB"
    },
    "1624": {
      "fn": "Vote.resetMappings",
      "offset": [
        2980,
        2989
      ],
      "op": "AND",
      "path": "0"
    },
    "1625": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1626": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1627": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1628": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "ADD",
      "path": "0"
    },
    "1629": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1630": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1631": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1632": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1633": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1635": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "ADD",
      "path": "0"
    },
    "1636": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2990
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1638": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1639": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1642": {
      "op": "NOT"
    },
    "1643": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "AND",
      "path": "0"
    },
    "1644": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1645": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1646": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1647": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1648": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1649": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1650": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "OR",
      "path": "0"
    },
    "1651": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1652": {
      "fn": "Vote.resetMappings",
      "offset": [
        2962,
        2998
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1653": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 28
    },
    "1654": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "1657": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1658": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "1661": {
      "fn": "Vote.resetMappings",
      "jump": "i",
      "offset": [
        2943,
        2946
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1662": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1664": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "POP",
      "path": "0"
    },
    "1665": {
      "fn": "Vote.resetMappings",
      "offset": [
        2943,
        2946
      ],
      "op": "POP",
      "path": "0"
    },
    "1666": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60F"
    },
    "1669": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1670": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1671": {
      "fn": "Vote.resetMappings",
      "offset": [
        2906,
        3009
      ],
      "op": "POP",
      "path": "0"
    },
    "1672": {
      "fn": "Vote.resetMappings",
      "jump": "o",
      "offset": [
        2670,
        3015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1673": {
      "fn": "Vote.resetArrays",
      "offset": [
        3021,
        3110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1674": {
      "fn": "Vote.resetArrays",
      "offset": [
        3063,
        3076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x695"
    },
    "1677": {
      "fn": "Vote.resetArrays",
      "offset": [
        3070,
        3076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1679": {
      "fn": "Vote.resetArrays",
      "offset": [
        3070,
        3076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1681": {
      "fn": "Vote.resetArrays",
      "offset": [
        3063,
        3076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BF"
    },
    "1684": {
      "fn": "Vote.resetArrays",
      "jump": "i",
      "offset": [
        3063,
        3076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1685": {
      "fn": "Vote.resetArrays",
      "offset": [
        3063,
        3076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1686": {
      "fn": "Vote.resetArrays",
      "offset": [
        3086,
        3103
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x19B"
    },
    "1689": {
      "fn": "Vote.resetArrays",
      "offset": [
        3093,
        3103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1691": {
      "fn": "Vote.resetArrays",
      "offset": [
        3093,
        3103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1693": {
      "fn": "Vote.resetArrays",
      "offset": [
        3086,
        3103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BF"
    },
    "1696": {
      "fn": "Vote.resetArrays",
      "jump": "i",
      "offset": [
        3086,
        3103
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1697": {
      "op": "JUMPDEST"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1700": {
      "op": "MLOAD"
    },
    "1701": {
      "op": "DUP1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1707": {
      "op": "MSTORE"
    },
    "1708": {
      "op": "DUP1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1711": {
      "op": "SWAP1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1714": {
      "op": "DUP3"
    },
    "1715": {
      "op": "MUL"
    },
    "1716": {
      "op": "DUP1"
    },
    "1717": {
      "op": "CALLDATASIZE"
    },
    "1718": {
      "op": "DUP4"
    },
    "1719": {
      "op": "CALLDATACOPY"
    },
    "1720": {
      "op": "POP"
    },
    "1721": {
      "op": "SWAP2"
    },
    "1722": {
      "op": "SWAP3"
    },
    "1723": {
      "op": "SWAP2"
    },
    "1724": {
      "op": "POP"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "jump": "o",
      "op": "JUMP"
    },
    "1727": {
      "op": "JUMPDEST"
    },
    "1728": {
      "op": "POP"
    },
    "1729": {
      "op": "DUP1"
    },
    "1730": {
      "op": "SLOAD"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1733": {
      "op": "DUP3"
    },
    "1734": {
      "op": "SSTORE"
    },
    "1735": {
      "op": "SWAP1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1743": {
      "op": "KECCAK256"
    },
    "1744": {
      "op": "SWAP1"
    },
    "1745": {
      "op": "DUP2"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "SWAP1"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x686"
    },
    "1751": {
      "op": "SWAP2"
    },
    "1752": {
      "op": "SWAP1"
    },
    "1753": {
      "op": "JUMPDEST"
    },
    "1754": {
      "op": "DUP1"
    },
    "1755": {
      "op": "DUP3"
    },
    "1756": {
      "op": "GT"
    },
    "1757": {
      "op": "ISZERO"
    },
    "1758": {
      "op": "PUSH2",
      "value": "0x6ED"
    },
    "1761": {
      "op": "JUMPI"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1764": {
      "op": "DUP2"
    },
    "1765": {
      "op": "SSTORE"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x6D9"
    },
    "1772": {
      "op": "JUMP"
    },
    "1773": {
      "op": "JUMPDEST"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "op": "SWAP1"
    },
    "1776": {
      "jump": "o",
      "op": "JUMP"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1782": {
      "op": "DUP3"
    },
    "1783": {
      "op": "DUP5"
    },
    "1784": {
      "op": "SUB"
    },
    "1785": {
      "op": "SLT"
    },
    "1786": {
      "op": "ISZERO"
    },
    "1787": {
      "op": "PUSH2",
      "value": "0x702"
    },
    "1790": {
      "op": "JUMPI"
    },
    "1791": {
      "op": "DUP1"
    },
    "1792": {
      "op": "DUP2"
    },
    "1793": {
      "op": "REVERT"
    },
    "1794": {
      "op": "JUMPDEST"
    },
    "1795": {
      "op": "DUP2"
    },
    "1796": {
      "op": "CALLDATALOAD"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1803": {
      "op": "SHL"
    },
    "1804": {
      "op": "SUB"
    },
    "1805": {
      "op": "DUP2"
    },
    "1806": {
      "op": "AND"
    },
    "1807": {
      "op": "DUP2"
    },
    "1808": {
      "op": "EQ"
    },
    "1809": {
      "op": "PUSH2",
      "value": "0x718"
    },
    "1812": {
      "op": "JUMPI"
    },
    "1813": {
      "op": "DUP2"
    },
    "1814": {
      "op": "DUP3"
    },
    "1815": {
      "op": "REVERT"
    },
    "1816": {
      "op": "JUMPDEST"
    },
    "1817": {
      "op": "SWAP4"
    },
    "1818": {
      "op": "SWAP3"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "jump": "o",
      "op": "JUMP"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1827": {
      "op": "DUP2"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "op": "DUP2"
    },
    "1830": {
      "op": "DUP5"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1833": {
      "op": "JUMPDEST"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1836": {
      "op": "DUP2"
    },
    "1837": {
      "op": "LT"
    },
    "1838": {
      "op": "ISZERO"
    },
    "1839": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1842": {
      "op": "JUMPI"
    },
    "1843": {
      "op": "DUP2"
    },
    "1844": {
      "op": "MLOAD"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "op": "SUB"
    },
    "1853": {
      "op": "AND"
    },
    "1854": {
      "op": "DUP4"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1858": {
      "op": "SWAP3"
    },
    "1859": {
      "op": "DUP4"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "SWAP3"
    },
    "1862": {
      "op": "SWAP1"
    },
    "1863": {
      "op": "SWAP2"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "SWAP1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "PUSH2",
      "value": "0x729"
    },
    "1872": {
      "op": "JUMP"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "DUP3"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "op": "DUP4"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1884": {
      "op": "JUMPDEST"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1887": {
      "op": "DUP2"
    },
    "1888": {
      "op": "LT"
    },
    "1889": {
      "op": "ISZERO"
    },
    "1890": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "1893": {
      "op": "JUMPI"
    },
    "1894": {
      "op": "DUP2"
    },
    "1895": {
      "op": "MLOAD"
    },
    "1896": {
      "op": "DUP4"
    },
    "1897": {
      "op": "MSTORE"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1900": {
      "op": "SWAP3"
    },
    "1901": {
      "op": "DUP4"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "SWAP3"
    },
    "1904": {
      "op": "SWAP1"
    },
    "1905": {
      "op": "SWAP2"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "SWAP1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "ADD"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x75C"
    },
    "1914": {
      "op": "JUMP"
    },
    "1915": {
      "op": "JUMPDEST"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "op": "SWAP4"
    },
    "1920": {
      "op": "SWAP3"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "jump": "o",
      "op": "JUMP"
    },
    "1925": {
      "op": "JUMPDEST"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1928": {
      "op": "DUP1"
    },
    "1929": {
      "op": "DUP3"
    },
    "1930": {
      "op": "MSTORE"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1933": {
      "op": "SWAP1"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH32",
      "value": "0x596F75206861766520616C726561647920766F7465642E000000000000000000"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1972": {
      "op": "DUP3"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "SWAP1"
    },
    "1979": {
      "jump": "o",
      "op": "JUMP"
    },
    "1980": {
      "op": "JUMPDEST"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1983": {
      "op": "DUP1"
    },
    "1984": {
      "op": "DUP3"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "op": "DUP3"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "op": "MSTORE"
    },
    "1992": {
      "op": "PUSH32",
      "value": "0x4F6E6C792065787465726E616C6C79206F776E6564206163636F756E74732068"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2027": {
      "op": "DUP3"
    },
    "2028": {
      "op": "ADD"
    },
    "2029": {
      "op": "MSTORE"
    },
    "2030": {
      "op": "PUSH32",
      "value": "0x617665207468652072696768742072656769737465722061732063616E646964"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2065": {
      "op": "DUP3"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "MSTORE"
    },
    "2068": {
      "op": "PUSH5",
      "value": "0x30BA32B997"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2079": {
      "op": "DUP3"
    },
    "2080": {
      "op": "ADD"
    },
    "2081": {
      "op": "MSTORE"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2084": {
      "op": "ADD"
    },
    "2085": {
      "op": "SWAP1"
    },
    "2086": {
      "jump": "o",
      "op": "JUMP"
    },
    "2087": {
      "op": "JUMPDEST"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2090": {
      "op": "DUP1"
    },
    "2091": {
      "op": "DUP3"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2095": {
      "op": "SWAP1"
    },
    "2096": {
      "op": "DUP3"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH32",
      "value": "0x596F752063616E206E6F206C6F6E676572207265676973746572206173206120"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2134": {
      "op": "DUP3"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "op": "MSTORE"
    },
    "2137": {
      "op": "PUSH32",
      "value": "0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2172": {
      "op": "DUP3"
    },
    "2173": {
      "op": "ADD"
    },
    "2174": {
      "op": "MSTORE"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "SWAP1"
    },
    "2179": {
      "jump": "o",
      "op": "JUMP"
    },
    "2180": {
      "op": "JUMPDEST"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2183": {
      "op": "DUP1"
    },
    "2184": {
      "op": "DUP3"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2188": {
      "op": "SWAP1"
    },
    "2189": {
      "op": "DUP3"
    },
    "2190": {
      "op": "ADD"
    },
    "2191": {
      "op": "MSTORE"
    },
    "2192": {
      "op": "PUSH32",
      "value": "0x50617469656E63652C2074686520726567697374726174696F6E20706572696F"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2227": {
      "op": "DUP3"
    },
    "2228": {
      "op": "ADD"
    },
    "2229": {
      "op": "MSTORE"
    },
    "2230": {
      "op": "PUSH14",
      "value": "0x64206973206E6F74206F76657221"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2250": {
      "op": "DUP3"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "op": "SWAP1"
    },
    "2257": {
      "jump": "o",
      "op": "JUMP"
    },
    "2258": {
      "op": "JUMPDEST"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2261": {
      "op": "DUP1"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2266": {
      "op": "SWAP1"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH32",
      "value": "0x50617469656E63652C207468652063757272656E7420766F74696E6720697320"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2305": {
      "op": "DUP3"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH9",
      "value": "0x3737BA1037BB32B917"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2323": {
      "op": "DUP3"
    },
    "2324": {
      "op": "ADD"
    },
    "2325": {
      "op": "MSTORE"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2328": {
      "op": "ADD"
    },
    "2329": {
      "op": "SWAP1"
    },
    "2330": {
      "jump": "o",
      "op": "JUMP"
    },
    "2331": {
      "op": "JUMPDEST"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2334": {
      "op": "DUP1"
    },
    "2335": {
      "op": "DUP3"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2339": {
      "op": "SWAP1"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "op": "MSTORE"
    },
    "2343": {
      "op": "PUSH17",
      "value": "0x2A3432903B37BA329034B99037BB32B917"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2366": {
      "op": "DUP3"
    },
    "2367": {
      "op": "ADD"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2371": {
      "op": "ADD"
    },
    "2372": {
      "op": "SWAP1"
    },
    "2373": {
      "jump": "o",
      "op": "JUMP"
    },
    "2374": {
      "op": "JUMPDEST"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2377": {
      "op": "DUP1"
    },
    "2378": {
      "op": "DUP3"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2382": {
      "op": "SWAP1"
    },
    "2383": {
      "op": "DUP3"
    },
    "2384": {
      "op": "ADD"
    },
    "2385": {
      "op": "MSTORE"
    },
    "2386": {
      "op": "PUSH32",
      "value": "0x596F752061726520616C72656164792072656769737465726564206173206120"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2421": {
      "op": "DUP3"
    },
    "2422": {
      "op": "ADD"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH32",
      "value": "0x63616E64696461746520666F72207468697320656C656374696F6E2E00000000"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2459": {
      "op": "DUP3"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2464": {
      "op": "ADD"
    },
    "2465": {
      "op": "SWAP1"
    },
    "2466": {
      "jump": "o",
      "op": "JUMP"
    },
    "2467": {
      "op": "JUMPDEST"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2470": {
      "op": "DUP1"
    },
    "2471": {
      "op": "DUP3"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "2475": {
      "op": "SWAP1"
    },
    "2476": {
      "op": "DUP3"
    },
    "2477": {
      "op": "ADD"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH32",
      "value": "0x4F6E6C792065787465726E616C6C79206F776E6564206163636F756E74732068"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2514": {
      "op": "DUP3"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "op": "PUSH22",
      "value": "0x30BB32903A3432903934B3B43A103A37903B37BA3297"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "MSTORE"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "op": "SWAP1"
    },
    "2552": {
      "jump": "o",
      "op": "JUMP"
    },
    "2553": {
      "op": "JUMPDEST"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2556": {
      "op": "DUP1"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "2561": {
      "op": "SWAP1"
    },
    "2562": {
      "op": "DUP3"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D206E756D626572206F662063616E6469646174657320726561"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2600": {
      "op": "DUP3"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH32",
      "value": "0x6368656420666F72207468697320656C656374696F6E2E000000000000000000"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2638": {
      "op": "DUP3"
    },
    "2639": {
      "op": "ADD"
    },
    "2640": {
      "op": "MSTORE"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2643": {
      "op": "ADD"
    },
    "2644": {
      "op": "SWAP1"
    },
    "2645": {
      "jump": "o",
      "op": "JUMP"
    },
    "2646": {
      "op": "JUMPDEST"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2649": {
      "op": "DUP1"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "MSTORE"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2654": {
      "op": "SWAP1"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH32",
      "value": "0x546869732061646472657373206973206E6F7420726567697374657265642061"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2693": {
      "op": "DUP3"
    },
    "2694": {
      "op": "ADD"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "PUSH14",
      "value": "0x3990309031B0B73234B230BA3297"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2716": {
      "op": "DUP3"
    },
    "2717": {
      "op": "ADD"
    },
    "2718": {
      "op": "MSTORE"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2721": {
      "op": "ADD"
    },
    "2722": {
      "op": "SWAP1"
    },
    "2723": {
      "jump": "o",
      "op": "JUMP"
    },
    "2724": {
      "op": "JUMPDEST"
    },
    "2725": {
      "op": "SWAP1"
    },
    "2726": {
      "op": "DUP2"
    },
    "2727": {
      "op": "MSTORE"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "op": "SWAP1"
    },
    "2732": {
      "jump": "o",
      "op": "JUMP"
    },
    "2733": {
      "op": "JUMPDEST"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2736": {
      "op": "DUP3"
    },
    "2737": {
      "op": "NOT"
    },
    "2738": {
      "op": "DUP3"
    },
    "2739": {
      "op": "GT"
    },
    "2740": {
      "op": "ISZERO"
    },
    "2741": {
      "op": "PUSH2",
      "value": "0xAC0"
    },
    "2744": {
      "op": "JUMPI"
    },
    "2745": {
      "op": "PUSH2",
      "value": "0xAC0"
    },
    "2748": {
      "op": "PUSH2",
      "value": "0xAE0"
    },
    "2751": {
      "jump": "i",
      "op": "JUMP"
    },
    "2752": {
      "op": "JUMPDEST"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "op": "ADD"
    },
    "2755": {
      "op": "SWAP1"
    },
    "2756": {
      "jump": "o",
      "op": "JUMP"
    },
    "2757": {
      "op": "JUMPDEST"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2762": {
      "op": "NOT"
    },
    "2763": {
      "op": "DUP3"
    },
    "2764": {
      "op": "EQ"
    },
    "2765": {
      "op": "ISZERO"
    },
    "2766": {
      "op": "PUSH2",
      "value": "0xAD9"
    },
    "2769": {
      "op": "JUMPI"
    },
    "2770": {
      "op": "PUSH2",
      "value": "0xAD9"
    },
    "2773": {
      "op": "PUSH2",
      "value": "0xAE0"
    },
    "2776": {
      "jump": "i",
      "op": "JUMP"
    },
    "2777": {
      "op": "JUMPDEST"
    },
    "2778": {
      "op": "POP"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "op": "SWAP1"
    },
    "2783": {
      "jump": "o",
      "op": "JUMP"
    },
    "2784": {
      "op": "JUMPDEST"
    },
    "2785": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2800": {
      "op": "MSTORE"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2805": {
      "op": "REVERT"
    }
  },
  "sha1": "43740546cb231a8ec7501dab5915d5cc73161b2e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\ncontract Vote {\n    uint256 public constant MAX_NUMBER_CANDIDATES = 5;\n    uint256 public constant LENGTH_REGISTRATION_IN_BLOCKS = 20;\n    uint256 public constant LENGTH_VOTING_IN_BLOCKS = 50;\n\n    uint256 public endRegistration = 0;\n    uint256 public endVoting = 0;\n\n    address[] voters;\n    address[] candidates;\n\n    mapping(address => bool) accountToHasVoted;\n    mapping(address => bool) accountToRegistration;\n    mapping(address => uint256) public accountToVotesReceived;\n\n    function initiateElection() public {\n        require(block.number > endVoting, \"Patience, the current voting is not over.\");\n\n        endRegistration = block.number + LENGTH_REGISTRATION_IN_BLOCKS;\n        endVoting = endRegistration + LENGTH_VOTING_IN_BLOCKS;\n\n        resetMappings();\n        resetArrays();\n    }\n\n    function signupAsCandidate() public {\n        require(block.number <= endRegistration, \"You can no longer register as a candidate for this election.\");\n        require(candidates.length < MAX_NUMBER_CANDIDATES, \"Maximum number of candidates reached for this election.\");\n        require(msg.sender == tx.origin, \"Only externally owned accounts have the right register as candidates.\");\n        require(!accountToRegistration[msg.sender], \"You are already registered as a candidate for this election.\");\n        \n        accountToRegistration[msg.sender] = true;\n        candidates.push(msg.sender);\n    }\n\n    function vote(address candidate) public {\n        require(block.number > endRegistration, \"Patience, the registration period is not over!\"); \n        require(block.number <= endVoting, \"The vote is over.\"); \n        require(msg.sender == tx.origin, \"Only externally owned accounts have the right to vote.\");\n        require(accountToRegistration[candidate], \"This address is not registered as a candidate.\"); \n        require(!accountToHasVoted[msg.sender], \"You have already voted.\");\n\n        accountToHasVoted[msg.sender] = true;\n        accountToVotesReceived[candidate] += 1;\n        voters.push(msg.sender);\n    }\n\n    function getResults() public view returns (address[MAX_NUMBER_CANDIDATES] memory, uint256[MAX_NUMBER_CANDIDATES] memory) {\n        address[MAX_NUMBER_CANDIDATES]  memory candidates_;\n        uint256[MAX_NUMBER_CANDIDATES]  memory votes_;\n\n        for (uint256 i=0; i < candidates.length; i++) {\n            candidates_[i] = candidates[i];\n            votes_[i] = accountToVotesReceived[candidates[i]];\n        }\n\n        return (candidates_, votes_);\n    }\n\n    function getNumberCandidates() public view returns (uint256) {\n        return candidates.length;\n    }\n\n    function resetMappings() internal {\n        for (uint256 i=0; i < candidates.length; i++) {\n            accountToRegistration[candidates[i]] = false;\n            accountToVotesReceived[candidates[i]] = 0;\n        }\n            \n        for (uint256 i=0; i < voters.length; i++) {\n            accountToHasVoted[voters[i]] = false;\n        }\n    }\n\n    function resetArrays() internal {\n        delete voters;\n        delete candidates;\n    }\n\n}\n",
  "sourceMap": "58:3055:0:-:0;;;289:1;256:34;;323:1;296:28;;58:3055;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vote.sol",
  "type": "contract"
}